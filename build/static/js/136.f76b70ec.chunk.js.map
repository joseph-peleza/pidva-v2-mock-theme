{"version":3,"sources":["routes/components/dataEntry/Upload/UploadClick.js","routes/components/dataEntry/Upload/Avatar.js","routes/components/dataEntry/Upload/UploadDefault.js","routes/components/dataEntry/Upload/UploadPicture.js","routes/components/dataEntry/Upload/CompleteControl.js","routes/components/dataEntry/Upload/DragDrop.js","routes/components/dataEntry/Upload/UploadListStyle.js","routes/components/dataEntry/Upload/index.js"],"names":["props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","message","success","error","UploadClick","className","title","type","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","isJPG","isLt2M","size","Avatar","state","loading","handleChange","originFileObj","imageUrl","setState","uploadButton","this","listType","showUploadList","src","alt","React","Component","defaultFileList","uid","reponse","url","UploadDefault","UploadPicture","previewVisible","previewImage","handleCancel","handlePreview","thumbUrl","onPreview","length","visible","footer","onCancel","style","width","CompleteControl","slice","map","response","filter","multiple","Dragger","DragDrop","props2","UploadListStyle","Upload","lg","md","sm","xs"],"mappings":"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","file":"static/js/136.f76b70ec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button, Card, message, Upload} from \"antd\";\r\nimport { Icon } from \"@ant-design/compatible\";\r\n\r\nconst props = {\r\n  name: 'file',\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  headers: {\r\n    authorization: 'authorization-text',\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (info.file.status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nconst UploadClick = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Upload Click\">\r\n        <Upload {...props}>\r\n          <Button>\r\n            <Icon type=\"upload\"/> Click to Upload\r\n          </Button>\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default UploadClick;\r\n","import React from \"react\";\r\nimport {Card, message, Upload} from \"antd\";\r\nimport { Icon } from \"@ant-design/compatible\";\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJPG = file.type === 'image/jpeg';\r\n  if (!isJPG) {\r\n    message.error('You can only upload JPG file!');\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n  return isJPG && isLt2M;\r\n}\r\n\r\nclass Avatar extends React.Component {\r\n  state = {\r\n    loading: false,\r\n  };\r\n  handleChange = (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({loading: true});\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => this.setState({\r\n        imageUrl,\r\n        loading: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'}/>\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    const imageUrl = this.state.imageUrl;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Avatar\">\r\n        <Upload\r\n          name=\"avatar\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action=\"//jsonplaceholder.typicode.com/posts/\"\r\n          beforeUpload={beforeUpload}\r\n          onChange={this.handleChange}\r\n        >\r\n          {imageUrl ? <img src={imageUrl} alt=\"\"/> : uploadButton}\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport {Button, Card, Upload} from \"antd\";\r\nimport { Icon } from \"@ant-design/compatible\";\r\n\r\nconst props = {\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  onChange({file, fileList}) {\r\n    if (file.status !== 'uploading') {\r\n      console.log(file, fileList);\r\n    }\r\n  },\r\n  defaultFileList: [{\r\n    uid: 1,\r\n    name: 'xxx.png',\r\n    status: 'done',\r\n    reponse: 'Server Error 500', // custom error message to show\r\n    url: 'http://www.baidu.com/xxx.png',\r\n  }, {\r\n    uid: 2,\r\n    name: 'yyy.png',\r\n    status: 'done',\r\n    url: 'http://www.baidu.com/yyy.png',\r\n  }, {\r\n    uid: 3,\r\n    name: 'zzz.png',\r\n    status: 'error',\r\n    reponse: 'Server Error 500', // custom error message to show\r\n    url: 'http://www.baidu.com/zzz.png',\r\n  }],\r\n};\r\n\r\nconst UploadDefault = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Upload Default\">\r\n        <Upload {...props}>\r\n          <Button>\r\n            <Icon type=\"upload\"/> Upload\r\n          </Button>\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default UploadDefault;\r\n","import React from \"react\";\r\nimport {Card, Modal, Upload} from \"antd\";\r\nimport { Icon } from \"@ant-design/compatible\";\r\n\r\nclass UploadPicture extends React.Component {\r\n  state = {\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    fileList: [{\r\n      uid: -1,\r\n      name: 'xxx.png',\r\n      status: 'done',\r\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n    }],\r\n  };\r\n\r\n  handleCancel = () => this.setState({previewVisible: false});\r\n\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  handleChange = ({fileList}) => this.setState({fileList});\r\n\r\n  render() {\r\n    const {previewVisible, previewImage, fileList} = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\"/>\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <Card title=\"UploadPicture\" className=\"gx-card clearfix\">\r\n        <Upload\r\n          action=\"//jsonplaceholder.typicode.com/posts/\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 3 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{width: '100%'}} src={previewImage}/>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UploadPicture;\r\n","import React from \"react\";\r\nimport {Button, Card, Upload} from \"antd\";\r\nimport { Icon } from \"@ant-design/compatible\";\r\n\r\nclass CompleteControl extends React.Component {\r\n  state = {\r\n    fileList: [{\r\n      uid: -1,\r\n      name: 'xxx.png',\r\n      status: 'done',\r\n      url: 'http://www.baidu.com/xxx.png',\r\n    }],\r\n  };\r\n  handleChange = (info) => {\r\n    let fileList = info.fileList;\r\n\r\n    // 1. Limit the number of uploaded files\r\n    //    Only to show two recent uploaded files, and old ones will be replaced by the new\r\n    fileList = fileList.slice(-2);\r\n\r\n    // 2. read from response and show file link\r\n    fileList = fileList.map((file) => {\r\n      if (file.response) {\r\n        // Component will show file.url as link\r\n        file.url = file.response.url;\r\n      }\r\n      return file;\r\n    });\r\n\r\n    // 3. filter successfully uploaded files according to response from server\r\n    fileList = fileList.filter((file) => {\r\n      if (file.response) {\r\n        return file.response.status === 'success';\r\n      }\r\n      return true;\r\n    });\r\n\r\n    this.setState({fileList});\r\n  };\r\n\r\n  render() {\r\n    const props = {\r\n      action: '//jsonplaceholder.typicode.com/posts/',\r\n      onChange: this.handleChange,\r\n      multiple: true,\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Complete Control\">\r\n        <Upload {...props} fileList={this.state.fileList}>\r\n          <Button>\r\n            <Icon type=\"upload\"/> upload\r\n          </Button>\r\n        </Upload>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompleteControl;\r\n","import React from \"react\";\r\nimport {Card, message, Upload} from \"antd\";\r\nimport { Icon } from \"@ant-design/compatible\";\r\n\r\nconst Dragger = Upload.Dragger;\r\n\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  onChange(info) {\r\n    const status = info.file.status;\r\n    if (status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n};\r\n\r\nconst DragDrop = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"DragDrop\">\r\n        <Dragger {...props}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <Icon type=\"inbox\"/>\r\n          </p>\r\n          <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n          <p className=\"ant-upload-hint\">Support for a single or bulk upload. Strictly prohibit from uploading company\r\n            data or other band files</p>\r\n        </Dragger>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default DragDrop;\r\n","import React from \"react\";\r\nimport {Button, Card, Upload} from \"antd\";\r\nimport { Icon } from \"@ant-design/compatible\";\r\n\r\nconst fileList = [{\r\n  uid: -1,\r\n  name: 'xxx.png',\r\n  status: 'done',\r\n  url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n  thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n}, {\r\n  uid: -2,\r\n  name: 'yyy.png',\r\n  status: 'done',\r\n  url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n  thumbUrl: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n}];\r\n\r\nconst props = {\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  listType: 'picture',\r\n  defaultFileList: [...fileList],\r\n};\r\n\r\nconst props2 = {\r\n  action: '//jsonplaceholder.typicode.com/posts/',\r\n  listType: 'picture',\r\n  defaultFileList: [...fileList],\r\n  className: 'upload-list-inline',\r\n};\r\n\r\nconst UploadListStyle = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Upload ListS tyle\">\r\n      <Upload {...props}>\r\n        <Button>\r\n          <Icon type=\"upload\"/> upload\r\n        </Button>\r\n      </Upload>\r\n      <br/>\r\n      <br/>\r\n      <Upload {...props2}>\r\n        <Button>\r\n          <Icon type=\"upload\"/> upload\r\n        </Button>\r\n      </Upload>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UploadListStyle;\r\n","import React, {Component} from \"react\";\r\n\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport UploadClick from \"./UploadClick\";\r\nimport Avatar from \"./Avatar\";\r\nimport UploadDefault from \"./UploadDefault\";\r\nimport UploadPicture from \"./UploadPicture\";\r\nimport CompleteControl from \"./CompleteControl\";\r\nimport DragDrop from \"./DragDrop\";\r\nimport UploadListStyle from \"./UploadListStyle\";\r\n\r\n\r\nclass Upload extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <UploadClick/>\r\n          <Avatar/>\r\n          <UploadDefault/>\r\n          <UploadPicture/>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <CompleteControl/>\r\n          <DragDrop/>\r\n          <UploadListStyle/>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Upload;\r\n"],"sourceRoot":""}