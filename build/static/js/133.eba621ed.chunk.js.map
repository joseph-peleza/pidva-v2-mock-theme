{"version":3,"sources":["routes/components/dataEntry/Checkbox/Basic.js","routes/components/dataEntry/Checkbox/Disabled.js","routes/components/dataEntry/Checkbox/ControlledCheckbox.js","routes/components/dataEntry/Checkbox/CheckboxGroups.js","routes/components/dataEntry/Checkbox/UseWithGrid.js","routes/components/dataEntry/Checkbox/CheckAll.js","routes/components/dataEntry/Checkbox/index.js"],"names":["onChange","e","console","log","target","checked","Basic","className","title","Disabled","defaultChecked","disabled","ControlledCheckbox","state","toggleChecked","setState","toggleDisable","label","this","style","marginBottom","type","size","onClick","marginLeft","Component","CheckboxGroup","Group","checkedValues","plainOptions","options","value","optionsWithDisabled","CheckboxGroups","defaultValue","UseWithGrid","width","span","defaultCheckedList","CheckAll","checkedList","indeterminate","checkAll","length","onCheckAllChange","Checkbox","lg","md","sm","xs"],"mappings":"oOAGA,SAASA,EAASC,GAChBC,QAAQC,IAAR,oBAAyBF,EAAEG,OAAOC,UAGpC,IAQeC,EARD,WACZ,OACE,mBAAMC,UAAU,UAAUC,MAAM,QAAhC,SACE,mBAAUR,SAAUA,EAApB,yBCISS,EAVE,WACf,OACE,oBAAMF,UAAU,UAAUC,MAAM,WAAhC,UACE,mBAAUE,gBAAgB,EAAOC,UAAQ,IACzC,uBACA,mBAAUD,gBAAc,EAACC,UAAQ,Q,iDCNjCC,E,4MACJC,MAAQ,CACNR,SAAS,EACTM,UAAU,G,EAEZG,cAAgB,WACd,EAAKC,SAAS,CAACV,SAAU,EAAKQ,MAAMR,W,EAEtCW,cAAgB,WACd,EAAKD,SAAS,CAACJ,UAAW,EAAKE,MAAMF,Y,EAEvCX,SAAW,SAACC,GACVC,QAAQC,IAAI,aAAcF,EAAEG,OAAOC,SACnC,EAAKU,SAAS,CACZV,QAASJ,EAAEG,OAAOC,W,4CAItB,WACE,IAAMY,EAAK,UAAMC,KAAKL,MAAMR,QAAU,UAAY,YAAvC,YAAsDa,KAAKL,MAAMF,SAAW,WAAa,WACpG,OACE,oBAAMJ,UAAU,kBAAkBC,MAAM,qBAAxC,UACE,mBAAGW,MAAO,CAACC,aAAc,QAAzB,SACE,mBACEf,QAASa,KAAKL,MAAMR,QACpBM,SAAUO,KAAKL,MAAMF,SACrBX,SAAUkB,KAAKlB,SAHjB,SAKGiB,MAGL,8BACE,mBACEI,KAAK,UACLC,KAAK,QACLC,QAASL,KAAKJ,cAHhB,SAKII,KAAKL,MAAMR,QAAoB,UAAV,UAEzB,mBACEc,MAAO,CAACK,WAAY,QACpBH,KAAK,UACLC,KAAK,QACLC,QAASL,KAAKF,cAJhB,SAMIE,KAAKL,MAAMF,SAAuB,SAAZ,sB,GA7CHc,aAuDlBb,ICvDTc,EAAgB,IAASC,MAE/B,SAAS3B,EAAS4B,GAChB1B,QAAQC,IAAI,aAAcyB,GAG5B,IAAMC,EAAe,CAAC,QAAS,OAAQ,UAEjCC,EAAU,CACd,CAACb,MAAO,QAASc,MAAO,SACxB,CAACd,MAAO,OAAQc,MAAO,QACvB,CAACd,MAAO,SAAUc,MAAO,WAGrBC,EAAsB,CAC1B,CAACf,MAAO,QAASc,MAAO,SACxB,CAACd,MAAO,OAAQc,MAAO,QACvB,CAACd,MAAO,SAAUc,MAAO,SAAUpB,UAAU,IAiBhCsB,EAbQ,WACnB,OACE,oBAAM1B,UAAU,UAAUC,MAAM,kBAAhC,UACE,cAACkB,EAAD,CAAeI,QAASD,EAAcK,aAAc,CAAC,SAAUlC,SAAUA,IACzE,uBAAK,uBACL,cAAC0B,EAAD,CAAeI,QAASA,EAASI,aAAc,CAAC,QAASlC,SAAUA,IACnE,uBAAK,uBACL,cAAC0B,EAAD,CAAeI,QAASE,EAAqBrB,UAAQ,EAACuB,aAAc,CAAC,SAAUlC,SAAUA,QC5BjG,SAASA,EAAS4B,GAChB1B,QAAQC,IAAI,aAAcyB,GAI5B,IAgBeO,EAhBK,WAClB,OACE,mBAAM5B,UAAU,UAAUC,MAAM,gBAAhC,SACE,kBAAUmB,MAAV,CAAgBR,MAAO,CAACiB,MAAO,QAASpC,SAAUA,EAAlD,SACE,8BACE,mBAAKqC,KAAM,EAAX,SAAc,mBAAU9B,UAAU,UAAUwB,MAAM,IAApC,iBACd,mBAAKM,KAAM,EAAX,SAAc,mBAAU9B,UAAU,UAAUwB,MAAM,IAApC,iBACd,mBAAKM,KAAM,EAAX,SAAc,mBAAU9B,UAAU,UAAUwB,MAAM,IAApC,iBACd,mBAAKM,KAAM,EAAX,SAAc,mBAAU9B,UAAU,UAAUwB,MAAM,IAApC,iBACd,mBAAKM,KAAM,EAAX,SAAc,mBAAU9B,UAAU,UAAUwB,MAAM,IAApC,yBCdlBL,EAAgB,IAASC,MAEzBE,EAAe,CAAC,QAAS,OAAQ,UACjCS,EAAqB,CAAC,QAAS,UAG/BC,E,4MACJ1B,MAAQ,CACN2B,YAAaF,EACbG,eAAe,EACfC,UAAU,G,EAEZ1C,SAAW,SAACwC,GACV,EAAKzB,SAAS,CACZyB,cACAC,gBAAiBD,EAAYG,QAAWH,EAAYG,OAASd,EAAac,OAC1ED,SAAUF,EAAYG,SAAWd,EAAac,U,EAGlDC,iBAAmB,SAAC3C,GAClB,EAAKc,SAAS,CACZyB,YAAavC,EAAEG,OAAOC,QAAUwB,EAAe,GAC/CY,eAAe,EACfC,SAAUzC,EAAEG,OAAOC,W,4CAIvB,WACE,OACE,oBAAME,UAAU,UAAUC,MAAM,WAAhC,UACE,qBAAKD,UAAU,mCAAf,SACE,mBACEkC,cAAevB,KAAKL,MAAM4B,cAC1BzC,SAAUkB,KAAK0B,iBACfvC,QAASa,KAAKL,MAAM6B,SAHtB,yBAQF,cAAC,EAAD,CAAeZ,QAASD,EAAcE,MAAOb,KAAKL,MAAM2B,YAAaxC,SAAUkB,KAAKlB,kB,GAjCrEyB,aAwCRc,ICtBCM,UAjBC,WACf,OACE,8BACE,oBAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,oBAAKH,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/133.eba621ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card, Checkbox} from \"antd\";\r\n\r\nfunction onChange(e) {\r\n  console.log(`checked = ${e.target.checked}`);\r\n}\r\n\r\nconst Basic = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Basic\">\r\n      <Checkbox onChange={onChange}>Checkbox</Checkbox>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Basic;\r\n","import React from \"react\";\r\nimport {Card, Checkbox} from \"antd\";\r\n\r\n\r\nconst Disabled = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Disabled\">\r\n      <Checkbox defaultChecked={false} disabled/>\r\n      <br/>\r\n      <Checkbox defaultChecked disabled/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Disabled;\r\n","import React, {Component} from \"react\";\r\nimport {Button, Card, Checkbox} from \"antd\";\r\n\r\nclass ControlledCheckbox extends Component {\r\n  state = {\r\n    checked: true,\r\n    disabled: false,\r\n  };\r\n  toggleChecked = () => {\r\n    this.setState({checked: !this.state.checked});\r\n  }\r\n  toggleDisable = () => {\r\n    this.setState({disabled: !this.state.disabled});\r\n  }\r\n  onChange = (e) => {\r\n    console.log('checked = ', e.target.checked);\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const label = `${this.state.checked ? 'Checked' : 'Unchecked'}-${this.state.disabled ? 'Disabled' : 'Enabled'}`;\r\n    return (\r\n      <Card className=\"gx-card gx-card\" title=\"ControlledCheckbox\">\r\n        <p style={{marginBottom: '20px'}}>\r\n          <Checkbox\r\n            checked={this.state.checked}\r\n            disabled={this.state.disabled}\r\n            onChange={this.onChange}\r\n          >\r\n            {label}\r\n          </Checkbox>\r\n        </p>\r\n        <p>\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={this.toggleChecked}\r\n          >\r\n            {!this.state.checked ? 'Check' : 'Uncheck'}\r\n          </Button>\r\n          <Button\r\n            style={{marginLeft: '10px'}}\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={this.toggleDisable}\r\n          >\r\n            {!this.state.disabled ? 'Disable' : 'Enable'}\r\n          </Button>\r\n        </p>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default ControlledCheckbox;\r\n","import React from \"react\";\r\nimport {Card, Checkbox} from \"antd\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nfunction onChange(checkedValues) {\r\n  console.log('checked = ', checkedValues);\r\n}\r\n\r\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\r\n\r\nconst options = [\r\n  {label: 'Apple', value: 'Apple'},\r\n  {label: 'Pear', value: 'Pear'},\r\n  {label: 'Orange', value: 'Orange'},\r\n];\r\n\r\nconst optionsWithDisabled = [\r\n  {label: 'Apple', value: 'Apple'},\r\n  {label: 'Pear', value: 'Pear'},\r\n  {label: 'Orange', value: 'Orange', disabled: false},\r\n];\r\n\r\n\r\nconst CheckboxGroups = () => {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Checkbox Groups\">\r\n        <CheckboxGroup options={plainOptions} defaultValue={['Apple']} onChange={onChange}/>\r\n        <br/><br/>\r\n        <CheckboxGroup options={options} defaultValue={['Pear']} onChange={onChange}/>\r\n        <br/><br/>\r\n        <CheckboxGroup options={optionsWithDisabled} disabled defaultValue={['Apple']} onChange={onChange}/>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default CheckboxGroups;\r\n","import React from \"react\";\r\nimport {Card, Checkbox, Col, Row} from \"antd\";\r\n\r\nfunction onChange(checkedValues) {\r\n  console.log('checked = ', checkedValues);\r\n}\r\n\r\n\r\nconst UseWithGrid = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Use With Grid\">\r\n      <Checkbox.Group style={{width: '100%'}} onChange={onChange}>\r\n        <Row>\r\n          <Col span={8}><Checkbox className=\"gx-mb-3\" value=\"A\">A</Checkbox></Col>\r\n          <Col span={8}><Checkbox className=\"gx-mb-3\" value=\"B\">B</Checkbox></Col>\r\n          <Col span={8}><Checkbox className=\"gx-mb-3\" value=\"C\">C</Checkbox></Col>\r\n          <Col span={8}><Checkbox className=\"gx-mb-3\" value=\"D\">D</Checkbox></Col>\r\n          <Col span={8}><Checkbox className=\"gx-mb-3\" value=\"E\">E</Checkbox></Col>\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UseWithGrid;\r\n","import React, {Component} from \"react\";\r\nimport {Card, Checkbox} from \"antd\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\r\nconst defaultCheckedList = ['Apple', 'Orange'];\r\n\r\n\r\nclass CheckAll extends Component {\r\n  state = {\r\n    checkedList: defaultCheckedList,\r\n    indeterminate: true,\r\n    checkAll: false,\r\n  };\r\n  onChange = (checkedList) => {\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate: !!checkedList.length && (checkedList.length < plainOptions.length),\r\n      checkAll: checkedList.length === plainOptions.length,\r\n    });\r\n  }\r\n  onCheckAllChange = (e) => {\r\n    this.setState({\r\n      checkedList: e.target.checked ? plainOptions : [],\r\n      indeterminate: false,\r\n      checkAll: e.target.checked,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"CheckAll\">\r\n        <div className=\"gx-border-bottom gx-pb-3 gx-mb-3\">\r\n          <Checkbox\r\n            indeterminate={this.state.indeterminate}\r\n            onChange={this.onCheckAllChange}\r\n            checked={this.state.checkAll}\r\n          >\r\n            Check all\r\n          </Checkbox>\r\n        </div>\r\n        <CheckboxGroup options={plainOptions} value={this.state.checkedList} onChange={this.onChange}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CheckAll;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport Disabled from \"./Disabled\";\r\nimport ControlledCheckbox from \"./ControlledCheckbox\";\r\nimport CheckboxGroups from \"./CheckboxGroups\";\r\nimport UseWithGrid from \"./UseWithGrid\";\r\nimport CheckAll from \"./CheckAll\";\r\n\r\nconst Checkbox = () => {\r\n  return (\r\n    <Row>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <Basic/>\r\n        <CheckboxGroups/>\r\n        <ControlledCheckbox/>\r\n      </Col>\r\n      <Col lg={12} md={12} sm={24} xs={24}>\r\n        <Disabled/>\r\n        <UseWithGrid/>\r\n        <CheckAll/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default (Checkbox);\r\n"],"sourceRoot":""}