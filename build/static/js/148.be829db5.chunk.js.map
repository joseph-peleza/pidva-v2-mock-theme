{"version":3,"sources":["routes/customViews/userAuth/ResetPassword/index.js"],"names":["FormItem","Form","Item","ResetPassword","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","compareToFirstPassword","rule","value","callback","getFieldValue","validateToNextPassword","confirmDirty","force","getFieldDecorator","this","className","src","require","alt","title","id","onSubmit","rules","required","message","validator","type","placeholder","onBlur","handleConfirmBlur","htmlType","Component","WrappedResetPasswordForm","create"],"mappings":"2PAMMA,EAAWC,IAAKC,KAGhBC,E,4MAEJC,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,KAAKC,gBAAe,SAACC,EAAKC,GAC9BD,GACHE,QAAQC,IAAI,4BAA6BF,O,EAK/CG,uBAAyB,SAACC,EAAMC,EAAOC,GACrC,IAAMT,EAAO,EAAKD,MAAMC,KACpBQ,GAASA,IAAUR,EAAKU,cAAc,YACxCD,EAAS,iDAETA,K,EAIJE,uBAAyB,SAACJ,EAAMC,EAAOC,GACrC,IAAMT,EAAO,EAAKD,MAAMC,KACpBQ,GAAS,EAAKT,MAAMa,cACtBZ,EAAKC,eAAe,CAAC,WAAY,CAACY,OAAO,IAE3CJ,K,4CAGF,WACE,IAAOK,EAAqBC,KAAKhB,MAAMC,KAAhCc,kBAEP,OACE,qBAAKE,UAAU,qBAAf,SACE,sBAAKA,UAAU,mBAAf,UAEE,qBAAKA,UAAU,kBAAf,SACE,qBAAKC,IAAKC,EAAQ,KAAqCC,IAAI,SAASC,MAAM,aAE5E,sBAAKJ,UAAU,UAAf,UACE,gDACA,4BAAG,cAAC,IAAD,CAAcK,GAAG,sCAItB,eAAC,IAAD,CAAMC,SAAUP,KAAKnB,aAAcoB,UAAU,6BAA7C,UAEE,cAACxB,EAAD,UACGsB,EAAkB,WAAY,CAC7BS,MAAO,CAAC,CACNC,UAAU,EAAMC,QAAS,+BACxB,CACDC,UAAWX,KAAKJ,0BAJnBG,CAOC,mBAAOa,KAAK,WAAWC,YAAY,oBAIvC,cAACpC,EAAD,UACGsB,EAAkB,UAAW,CAC5BS,MAAO,CAAC,CACNC,UAAU,EAAMC,QAAS,iCACxB,CACDC,UAAWX,KAAKT,0BAJnBQ,CAOC,mBAAOc,YAAY,sBAAsBD,KAAK,WAAWE,OAAQd,KAAKe,uBAI1E,cAACtC,EAAD,UACE,mBAAQmC,KAAK,UAAUI,SAAS,SAAhC,SACE,cAAC,IAAD,CAAcV,GAAG,uC,GAxELW,aAoFtBC,EAA2BxC,IAAKyC,QAALzC,CAAcE,GAE/BsC","file":"static/js/148.be829db5.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Button, Input } from \"antd\";\r\nimport IntlMessages from \"src/util/IntlMessages\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\nclass ResetPassword extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.props.confirmDirty) {\r\n      form.validateFields(['confirm'], {force: true});\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n\r\n    return (\r\n      <div className=\"gx-login-container\">\r\n        <div className=\"gx-login-content\">\r\n\r\n          <div className=\"gx-login-header\">\r\n            <img src={require(\"src/assets/images/logo-white.png\")} alt=\"wieldy\" title=\"wieldy\"/>\r\n          </div>\r\n          <div className=\"gx-mb-4\">\r\n            <h2>Reset Password</h2>\r\n            <p><IntlMessages id=\"appModule.enterPasswordReset\"/></p>\r\n          </div>\r\n\r\n\r\n          <Form onSubmit={this.handleSubmit} className=\"gx-login-form gx-form-row0\">\r\n\r\n            <FormItem>\r\n              {getFieldDecorator('password', {\r\n                rules: [{\r\n                  required: true, message: 'Please input your password!',\r\n                }, {\r\n                  validator: this.validateToNextPassword,\r\n                }],\r\n              })(\r\n                <Input type=\"password\" placeholder=\"New Password\"/>\r\n              )}\r\n            </FormItem>\r\n\r\n            <FormItem>\r\n              {getFieldDecorator('confirm', {\r\n                rules: [{\r\n                  required: true, message: 'Please confirm your password!',\r\n                }, {\r\n                  validator: this.compareToFirstPassword,\r\n                }],\r\n              })(\r\n                <Input placeholder=\"Retype New Password\" type=\"password\" onBlur={this.handleConfirmBlur}/>\r\n              )}\r\n            </FormItem>\r\n\r\n            <FormItem>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                <IntlMessages id=\"app.userAuth.reset\"/>\r\n              </Button>\r\n            </FormItem>\r\n          </Form>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedResetPasswordForm = Form.create()(ResetPassword);\r\n\r\nexport default (WrappedResetPasswordForm);\r\n"],"sourceRoot":""}