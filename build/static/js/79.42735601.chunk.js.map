{"version":3,"sources":["components/AppModuleHeader/index.js","routes/inBuiltApps/Contact/data/contactList.js","components/contact/AddContact/index.js","components/contact/ContactList/ContactCell/index.js","components/contact/ContactList/index.js","routes/inBuiltApps/Contact/index.js"],"names":["AppModuleHeader","state","popoverOpen","toggle","bind","this","setState","props","placeholder","onChange","value","className","type","React","Component","defaultProps","styleName","notification","apps","AddContact","contact","id","thumb","name","email","phone","designation","selected","starred","frequently","onSaveContact","onContactClose","open","title","IntlMessages","visible","closable","onOk","onCancel","size","src","required","event","target","defaultValue","margin","autosize","minRows","maxRows","options","ContactCell","addContactState","onDeleteContact","onEditContact","menus","onClick","e","key","map","option","Item","addFavourite","onContactSelect","checked","charAt","toUpperCase","alt","overlay","placement","trigger","ContactList","contactList","index","contactId","filterOptions","icon","Contact","ContactSideBar","user","CustomScrollbars","onAddContact","selectedSectionId","onFilterOptionSelect","data","alertMessage","showMessage","allContact","selectedContacts","filterOption","filter","isNew","push","onDeleteSelectedContact","contacts","filterContact","userName","toLowerCase","indexOf","handleRequestClose","getAllContact","length","getUnselectedAllContact","noContentFoundMessage","drawerState","avatar","searchUser","selectedContact","evt","onClose","onToggleDrawer","updateContactUser","color","indeterminate","onAllContactSelect","message","info"],"mappings":"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","file":"static/js/79.42735601.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass AppModuleHeader extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      popoverOpen: false\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      popoverOpen: !this.state.popoverOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {placeholder, onChange, value} = this.props;\r\n\r\n    return (\r\n      <div className=\"gx-module-box-header-inner\">\r\n        <div\r\n          className=\"gx-search-bar gx-lt-icon-search-bar-lg gx-module-search-bar gx-d-none gx-d-sm-block\">\r\n          <div className=\"gx-form-group\">\r\n            <input className=\"ant-input gx-border-0\" type=\"search\" placeholder={placeholder}\r\n                   onChange={onChange}\r\n                   value={value}/>\r\n            <span className=\"gx-search-icon gx-pointer\"><i className=\"icon icon-search\"/></span>\r\n          </div>\r\n        </div>\r\n        <div className=\"gx-module-box-header-right\">\r\n          <span className=\"gx-fs-xl\"> <i\r\n            className=\"icon icon-apps gx-icon-btn\"/></span>\r\n          <span className=\"gx-fs-xl\"><i\r\n            className=\"icon icon-notification gx-icon-btn\"/></span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppModuleHeader;\r\n\r\nAppModuleHeader.defaultProps = {\r\n  styleName: '',\r\n  value: '',\r\n  notification: true,\r\n  apps: true\r\n};\r\n","export default [\r\n  {\r\n    'id': 1457690400,\r\n    'name': 'Stella Johnson',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'stella.johnson@example.com',\r\n    'phone': '+1-215-659-7529',\r\n    'designation': 'CEO',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': true,\r\n  }, {\r\n    'id': 1457690401,\r\n    'name': 'Garry Sobars',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'garry.sobars@example.com',\r\n    'phone': '+1-215-745-7529',\r\n    'designation': 'CFO',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': true,\r\n  },\r\n  {\r\n    'id': 1457690402,\r\n    'name': 'Alex Dolgove',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'alex.dolgove@example.com',\r\n    'phone': '+1-215-748-7855',\r\n    'designation': 'Designer',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': true,\r\n  }, {\r\n    'id': 1457690403,\r\n    'name': 'Domnic Brown',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'domnic.brown@example.com',\r\n    'phone': '+1-215-756-4579',\r\n    'designation': 'PHP Developer',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': true,\r\n  }, {\r\n    'id': 1457690404,\r\n    'name': 'Kadir M',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'kadir.m@example.com',\r\n    'phone': '+1-215-659-7586',\r\n    'designation': 'HR Manager',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690405,\r\n    'name': 'John Smith',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'john.smith@example.com',\r\n    'phone': '+1-215-876-8596',\r\n    'designation': 'Marketing Head',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690406,\r\n    'name': 'Domnic Harris',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'domnic.harris@example.com',\r\n    'phone': '+1-215-785-3841',\r\n    'designation': 'BDO',\r\n    'selected': false,\r\n    'starred': true,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690407,\r\n    'name': 'Jimmy Jo',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'jimmy.jo@example.com',\r\n    'phone': '+1-215-456-5863',\r\n    'designation': 'CCO',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690408,\r\n    'name': 'Jimmy Jon',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'jimmy.jon@example.com',\r\n    'phone': '+1-215-278-4558',\r\n    'designation': 'Developer',\r\n    'selected': false,\r\n    'starred': true,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690409,\r\n    'name': 'Jeson Born',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'jeson.born@example.com',\r\n    'phone': '+1-215-286-7551',\r\n    'designation': 'UI-UX Designer',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690410,\r\n    'name': 'Steve Smith',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'steve.smith@example.com',\r\n    'phone': '+1-215-586-5862',\r\n    'designation': 'CEO',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': false,\r\n  },\r\n  {\r\n    'id': 1457690500,\r\n    'name': 'Stella Johnson',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'stella.johnson@example.com',\r\n    'phone': '+1-215-659-7529',\r\n    'designation': 'CEO',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': true,\r\n  }, {\r\n    'id': 1457690501,\r\n    'name': 'Garry Sobars',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'garry.sobars@example.com',\r\n    'phone': '+1-215-745-7529',\r\n    'designation': 'CFO',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': true,\r\n  },\r\n  {\r\n    'id': 1457690502,\r\n    'name': 'Alex Dolgove',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'alex.dolgove@example.com',\r\n    'phone': '+1-215-748-7855',\r\n    'designation': 'Designer',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': true,\r\n  }, {\r\n    'id': 1457690503,\r\n    'name': 'Domnic Brown',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'domnic.brown@example.com',\r\n    'phone': '+1-215-756-4579',\r\n    'designation': 'PHP Developer',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': true,\r\n  }, {\r\n    'id': 1457690404,\r\n    'name': 'Kadir M',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'kadir.m@example.com',\r\n    'phone': '+1-215-659-7586',\r\n    'designation': 'HR Manager',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690505,\r\n    'name': 'John Smith',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'john.smith@example.com',\r\n    'phone': '+1-215-876-8596',\r\n    'designation': 'Marketing Head',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690506,\r\n    'name': 'Domnic Harris',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'domnic.harris@example.com',\r\n    'phone': '+1-215-785-3841',\r\n    'designation': 'BDO',\r\n    'selected': false,\r\n    'starred': true,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690507,\r\n    'name': 'Jimmy Jo',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'jimmy.jo@example.com',\r\n    'phone': '+1-215-456-5863',\r\n    'designation': 'CCO',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690508,\r\n    'name': 'Jimmy Jon',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'jimmy.jon@example.com',\r\n    'phone': '+1-215-278-4558',\r\n    'designation': 'Developer',\r\n    'selected': false,\r\n    'starred': true,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690509,\r\n    'name': 'Jeson Born',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'jeson.born@example.com',\r\n    'phone': '+1-215-286-7551',\r\n    'designation': 'UI-UX Designer',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': false,\r\n  }, {\r\n    'id': 1457690510,\r\n    'name': 'Steve Smith',\r\n    'thumb': 'https://via.placeholder.com/150x150',\r\n    'email': 'steve.smith@example.com',\r\n    'phone': '+1-215-586-5862',\r\n    'designation': 'CEO',\r\n    'selected': false,\r\n    'starred': false,\r\n    'frequently': false,\r\n  }\r\n\r\n]\r\n","import React from \"react\";\r\nimport {Avatar, Input, Modal} from \"antd\";\r\n\r\nimport IntlMessages from \"src/util/IntlMessages\";\r\n\r\nclass AddContact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {id, thumb, name, email, phone, designation, selected, starred, frequently} = props.contact;\r\n    this.state = {\r\n      id,\r\n      thumb,\r\n      name,\r\n      email,\r\n      phone,\r\n      designation,\r\n      selected,\r\n      starred,\r\n      frequently\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {onSaveContact, onContactClose, open, contact} = this.props;\r\n    const {id, name, email, phone, designation, selected, starred, frequently} = this.state;\r\n    let {thumb} = this.state;\r\n    if (!thumb) {\r\n      thumb = 'src/assets/images/placeholder.jpg';\r\n    }\r\n    return (\r\n      <Modal\r\n        title={contact.name === '' ?\r\n          <IntlMessages id=\"contact.addContact\"/> :\r\n          <IntlMessages id=\"contact.saveContact\"/>}\r\n        toggle={onContactClose} visible={open}\r\n        closable={false}\r\n        onOk={() => {\r\n          if (name === '')\r\n            return;\r\n          onContactClose();\r\n          onSaveContact(\r\n            {\r\n              'id': id,\r\n              'name': name,\r\n              'thumb': thumb,\r\n              'email': email,\r\n              'phone': phone,\r\n              'designation': designation,\r\n              'selected': selected,\r\n              'starred': starred,\r\n              'frequently': frequently\r\n            });\r\n          this.setState({\r\n            'id': id + 1,\r\n            'name': '',\r\n            'thumb': '',\r\n            'email': '',\r\n            'phone': '',\r\n            'designation': '',\r\n          })\r\n\r\n        }}\r\n        onCancel={onContactClose}>\r\n\r\n        <div className=\"gx-modal-box-row\">\r\n          <div className=\"gx-modal-box-avatar\">\r\n            <Avatar size=\"large\" src={thumb}/>\r\n          </div>\r\n\r\n          <div className=\"gx-modal-box-form-item\">\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                required\r\n                placeholder=\"Name\"\r\n                onChange={(event) => this.setState({name: event.target.value})}\r\n                defaultValue={name}\r\n                margin=\"none\"/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"Email\"\r\n                onChange={(event) => this.setState({email: event.target.value})}\r\n                value={email}\r\n                margin=\"normal\"/>\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"Phone\"\r\n                onChange={(event) => this.setState({phone: event.target.value})}\r\n                value={phone}\r\n                margin=\"normal\"\r\n              />\r\n            </div>\r\n            <div className=\"gx-form-group\">\r\n              <Input\r\n                placeholder=\"Designation\"\r\n                onChange={(event) => this.setState({designation: event.target.value})}\r\n                value={designation}\r\n                autosize={{minRows: 2, maxRows: 6}}\r\n                margin=\"normal\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\nimport {Avatar, Checkbox, Dropdown, Menu} from \"antd\";\r\n\r\nimport AddContact from \"../../AddContact/index\";\r\n\r\nconst options = [\r\n  'Edit',\r\n  'Delete',\r\n];\r\n\r\nclass ContactCell extends React.Component {\r\n\r\n  onContactClose = () => {\r\n    this.setState({addContactState: false});\r\n  };\r\n  onDeleteContact = (contact) => {\r\n    this.setState({addContactState: false});\r\n    this.props.onDeleteContact(contact);\r\n  };\r\n  onEditContact = () => {\r\n    this.setState({addContactState: true});\r\n  };\r\n  menus = () => (<Menu onClick={(e) => {\r\n    if (e.key === 'Edit') {\r\n      this.onEditContact()\r\n    } else {\r\n      this.onDeleteContact(this.props.contact)\r\n    }\r\n  }\r\n  }>\r\n    {options.map(option =>\r\n      <Menu.Item key={option}>\r\n        {option}\r\n      </Menu.Item>,\r\n    )}\r\n  </Menu>);\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      addContactState: false,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {contact, addFavourite, onContactSelect, onSaveContact} = this.props;\r\n    const {addContactState} = this.state;\r\n    const {name, thumb, email, phone, designation, starred} = contact;\r\n\r\n    return (\r\n\r\n      <div className=\"gx-contact-item\">\r\n        <div className=\"gx-module-list-icon\">\r\n          <Checkbox className=\"gx-icon-btn\"\r\n                    checked={contact.selected}\r\n                    value=\"checkedF\"\r\n                    onClick={() => {\r\n                      onContactSelect(contact)\r\n                    }}/>\r\n          <div className=\"gx-d-none gx-d-sm-flex\" onClick={() => {\r\n            addFavourite(contact)\r\n          }}>\r\n            {starred ? <i className=\"gx-icon-btn icon icon-star\"/> : <i className=\"gx-icon-btn icon icon-star-o\"/>}\r\n          </div>\r\n          <div className=\"gx-ml-2 gx-d-none gx-d-sm-flex\">\r\n            {(thumb === null || thumb === '') ?\r\n              <Avatar size=\"large\">\r\n                {name.charAt(0).toUpperCase()}\r\n              </Avatar>\r\n              :\r\n              <Avatar size=\"large\" alt={name} src={thumb}/>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"gx-module-list-info gx-contact-list-info\">\r\n          <div className=\"gx-module-contact-content\">\r\n            <p className=\"gx-mb-1\">\r\n              <span className=\"gx-text-truncate gx-contact-name\"> {name} </span>\r\n              <span className=\"gx-toolbar-separator\">&nbsp;</span>\r\n              <span className=\"gx-text-truncate gx-job-title\">{designation}</span>\r\n            </p>\r\n\r\n            <div className=\"gx-text-muted\">\r\n            <span className=\"gx-email gx-d-inline-block gx-mr-2\">\r\n                {email},\r\n            </span>\r\n              <span className=\"gx-phone gx-d-inline-block\">{phone}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"gx-module-contact-right\">\r\n\r\n            <Dropdown overlay={this.menus()} placement=\"bottomRight\" trigger={['click']}>\r\n              <i className=\"gx-icon-btn icon icon-ellipse-v\"/>\r\n            </Dropdown>\r\n\r\n            {addContactState &&\r\n            <AddContact open={addContactState} contact={contact} onSaveContact={onSaveContact}\r\n                        onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactCell;\r\n","import React from \"react\";\r\n\r\nimport ContactCell from \"./ContactCell/index\";\r\n\r\nconst ContactList = ({contactList, addFavourite, onContactSelect, onSaveContact, onDeleteContact}) => {\r\n  return (\r\n    <div className=\"gx-contact-main-content\">\r\n      {contactList.map((contact, index) =>\r\n        <ContactCell key={index} contact={contact} onDeleteContact={onDeleteContact}\r\n                     onSaveContact={onSaveContact}\r\n                     addFavourite={addFavourite} onContactSelect={onContactSelect}/>\r\n      )}\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContactList;\r\n","import React, {Component} from \"react\";\r\nimport {Button, Checkbox, Drawer, message} from \"antd\";\r\nimport CustomScrollbars from \"src/util/CustomScrollbars\";\r\n\r\nimport contactList from \"./data/contactList\";\r\nimport ContactList from \"src/components/contact/ContactList\";\r\nimport AppModuleHeader from \"src/components/AppModuleHeader/index\";\r\nimport AddContact from \"src/components/contact/AddContact\";\r\nimport IntlMessages from \"src/util/IntlMessages\";\r\n\r\nlet contactId = 723812738;\r\n\r\nconst filterOptions = [\r\n  {\r\n    id: 1,\r\n    name: 'All contacts',\r\n    icon: 'all-contacts'\r\n  }, {\r\n    id: 2,\r\n    name: 'Frequently contacted',\r\n    icon: 'frequent'\r\n\r\n  }, {\r\n\r\n    id: 3,\r\n    name: 'Starred contacts',\r\n    icon: 'star'\r\n  }\r\n];\r\n\r\nclass Contact extends Component {\r\n\r\n  ContactSideBar = (user) => {\r\n    return <div className=\"gx-module-side\">\r\n      <div className=\"gx-module-side-header\">\r\n        <div className=\"gx-module-logo\">\r\n          <i className=\"icon icon-contacts gx-mr-4\"/>\r\n          <span><IntlMessages id=\"chat.contacts\"/></span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"gx-module-side-content\">\r\n        <CustomScrollbars className=\"gx-module-side-scroll\">\r\n          <div className=\"gx-module-add-task\">\r\n            <Button className=\"gx-btn-block ant-btn\" type=\"primary\" aria-label=\"add\"\r\n                    onClick={this.onAddContact}>\r\n              <i className=\"icon icon-add gx-mr-2\"/>\r\n              <span>Add New Contact</span>\r\n            </Button>\r\n          </div>\r\n          <div className=\"gx-module-side-nav\">\r\n            <ul className=\"gx-module-nav\">\r\n              {filterOptions.map(option => <li key={option.id} className=\"gx-nav-item\">\r\n                  <span\r\n                    className={`gx-link ${option.id === this.state.selectedSectionId ? 'active' : ''}`} onClick={\r\n                    this.onFilterOptionSelect.bind(this, option)\r\n                  }>\r\n                    <i className={`icon icon-${option.icon}`}/>\r\n                    <span>{option.name}</span>\r\n                  </span>\r\n                </li>\r\n              )}\r\n\r\n            </ul>\r\n          </div>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n\r\n  };\r\n\r\n  addFavourite = (data) => {\r\n    this.setState({\r\n      alertMessage: data.starred ? 'Contact removed as star' : 'Contact marked as star',\r\n      showMessage: true,\r\n      contactList: this.state.contactList.map((contact) => contact.id === data.id ? {\r\n        ...contact,\r\n        starred: !data.starred\r\n      } : contact),\r\n      allContact: this.state.allContact.map((contact) => contact.id === data.id ? {\r\n        ...contact,\r\n        starred: !data.starred\r\n      } : contact)\r\n    })\r\n  };\r\n  onContactSelect = (data) => {\r\n    data.selected = !data.selected;\r\n    let selectedContacts = 0;\r\n    const contactList = this.state.contactList.map(contact => {\r\n        if (contact.selected) {\r\n          selectedContacts++;\r\n        }\r\n        if (contact.id === data.id) {\r\n          if (contact.selected) {\r\n            selectedContacts++;\r\n          }\r\n          return data;\r\n        } else {\r\n          return contact;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      selectedContacts: selectedContacts,\r\n      contactList: contactList\r\n    });\r\n\r\n  };\r\n\r\n\r\n  onAddContact = () => {\r\n    this.setState({addContactState: true});\r\n  };\r\n  onContactClose = () => {\r\n    this.setState({addContactState: false});\r\n  };\r\n  onFilterOptionSelect = (option) => {\r\n    switch (option.name) {\r\n      case 'All contacts': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          contactList: this.state.allContact\r\n        });\r\n        break;\r\n      }\r\n      case 'Frequently contacted': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          contactList: this.state.allContact.filter((contact) => contact.frequently)\r\n        });\r\n        break;\r\n      }\r\n      case 'Starred contacts': {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          contactList: this.state.allContact.filter((contact) => contact.starred)\r\n        });\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n  };\r\n  onSaveContact = (data) => {\r\n    let isNew = true;\r\n    const contactList = this.state.allContact.map((contact) => {\r\n      if (contact.id === data.id) {\r\n        isNew = false;\r\n        return data\r\n      } else {\r\n        return contact\r\n      }\r\n    });\r\n    if (isNew) {\r\n      contactList.push(data);\r\n    }\r\n    this.setState({\r\n      alertMessage: isNew ? 'Contact Added Successfully' : 'Contact Updated Successfully',\r\n      showMessage: true,\r\n      contactList: contactList,\r\n      allContact: contactList\r\n    });\r\n    // this.onFilterOptionSelect(this.state.filterOption);\r\n  };\r\n  onDeleteContact = (data) => {\r\n    this.setState({\r\n      alertMessage: 'Contact Deleted Successfully',\r\n      showMessage: true,\r\n      allContact: this.state.allContact.filter((contact) => contact.id !== data.id),\r\n      contactList: this.state.allContact.filter((contact) => contact.id !== data.id)\r\n    })\r\n  };\r\n  onDeleteSelectedContact = () => {\r\n    const contacts = this.state.allContact.filter((contact) => !contact.selected);\r\n    this.setState({\r\n      alertMessage: 'Contact Deleted Successfully',\r\n      showMessage: true,\r\n      allContact: contacts,\r\n      contactList: contacts,\r\n      selectedContacts: 0\r\n    })\r\n  };\r\n  filterContact = (userName) => {\r\n    const {filterOption} = this.state;\r\n    if (userName === '') {\r\n      this.setState({contactList: this.state.allContact});\r\n    } else {\r\n      const filterContact = this.state.allContact.filter((contact) =>\r\n        contact.name.toLowerCase().indexOf(userName.toLowerCase()) > -1);\r\n      if (filterOption === 'All contacts') {\r\n        this.setState({contactList: filterContact});\r\n      } else if (filterOption === 'Frequently contacted') {\r\n        this.setState({contactList: filterContact.filter((contact) => contact.frequently)});\r\n\r\n      } else if (filterOption === 'Starred contacts') {\r\n        this.setState({contactList: filterContact.filter((contact) => contact.starred)});\r\n      }\r\n    }\r\n  };\r\n  handleRequestClose = () => {\r\n    this.setState({\r\n      showMessage: false,\r\n    });\r\n  };\r\n  getAllContact = () => {\r\n    let contactList = this.state.allContact.map((contact) => contact ? {\r\n      ...contact,\r\n      selected: true\r\n    } : contact);\r\n    this.setState({\r\n      selectedContacts: contactList.length,\r\n      allContact: contactList,\r\n      contactList: contactList\r\n    });\r\n  };\r\n  getUnselectedAllContact = () => {\r\n    let contactList = this.state.allContact.map((contact) => contact ? {\r\n      ...contact,\r\n      selected: false\r\n    } : contact);\r\n    this.setState({\r\n      selectedContacts: 0,\r\n      allContact: contactList,\r\n      contactList: contactList\r\n    });\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      noContentFoundMessage: 'No Contact found in selected folder',\r\n      alertMessage: '',\r\n      showMessage: false,\r\n      selectedSectionId: 1,\r\n      drawerState: false,\r\n      user: {\r\n        name: 'Robert Johnson',\r\n        email: 'robert.johnson@example.com',\r\n        avatar: 'https://via.placeholder.com/150x150'\r\n      },\r\n      searchUser: '',\r\n      filterOption: 'All contacts',\r\n      allContact: contactList,\r\n      contactList: contactList,\r\n      selectedContact: null,\r\n      selectedContacts: 0,\r\n      addContactState: false,\r\n    }\r\n  }\r\n\r\n  onAllContactSelect() {\r\n    const selectAll = this.state.selectedContacts < this.state.contactList.length;\r\n    if (selectAll) {\r\n      this.getAllContact();\r\n    } else {\r\n      this.getUnselectedAllContact();\r\n    }\r\n  }\r\n\r\n  updateContactUser(evt) {\r\n    this.setState({\r\n      searchUser: evt.target.value,\r\n    });\r\n    this.filterContact(evt.target.value)\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {user, contactList, addContactState, drawerState, selectedContacts, alertMessage, showMessage, noContentFoundMessage} = this.state;\r\n    return (\r\n      <div className=\"gx-main-content\">\r\n        <div className=\"gx-app-module\">\r\n\r\n          <div className=\"gx-d-block gx-d-lg-none\">\r\n            <Drawer\r\n              placement=\"left\"\r\n              closable={false}\r\n              visible={drawerState}\r\n              onClose={this.onToggleDrawer.bind(this)}>\r\n              {this.ContactSideBar()}\r\n            </Drawer>\r\n          </div>\r\n          <div className=\"gx-module-sidenav gx-d-none gx-d-lg-flex\">\r\n            {this.ContactSideBar(user)}\r\n          </div>\r\n\r\n          <div className=\"gx-module-box\">\r\n            <div className=\"gx-module-box-header\">\r\n              <span className=\"gx-drawer-btn gx-d-flex gx-d-lg-none\">\r\n                  <i className=\"icon icon-menu gx-icon-btn\" aria-label=\"Menu\"\r\n                     onClick={this.onToggleDrawer.bind(this)}/>\r\n              </span>\r\n\r\n              <AppModuleHeader placeholder=\"Search contact\" notification={false} apps={false}\r\n                               user={this.state.user}\r\n                               onChange={this.updateContactUser.bind(this)}\r\n                               value={this.state.searchUser}/>\r\n            </div>\r\n            <div className=\"gx-module-box-content\">\r\n\r\n              <div className=\"gx-module-box-topbar\">\r\n                <Checkbox color=\"primary\" className=\"gx-icon-btn\"\r\n                          indeterminate={selectedContacts > 0 && selectedContacts < contactList.length}\r\n                          checked={selectedContacts > 0}\r\n                          onChange={this.onAllContactSelect.bind(this)}\r\n                          value=\"SelectMail\"/>\r\n\r\n\r\n                {selectedContacts > 0 &&\r\n                <i className=\"gx-icon-btn icon icon-trash\" onClick={this.onDeleteSelectedContact.bind(this)}/>}\r\n\r\n              </div>\r\n              <CustomScrollbars className=\"gx-module-content-scroll\">\r\n                {contactList.length === 0 ?\r\n                  <div className=\"gx-h-100 gx-d-flex gx-align-items-center gx-justify-content-center\">\r\n                    {noContentFoundMessage}\r\n                  </div>\r\n                  : <ContactList contactList={contactList}\r\n                                 addFavourite={this.addFavourite.bind(this)}\r\n                                 onContactSelect={this.onContactSelect.bind(this)}\r\n                                 onDeleteContact={this.onDeleteContact.bind(this)}\r\n                                 onSaveContact={this.onSaveContact.bind(this)}/>\r\n                }\r\n\r\n\r\n              </CustomScrollbars>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <AddContact open={addContactState} contact={{\r\n          'id': contactId++,\r\n          'name': '',\r\n          'thumb': '',\r\n          'email': '',\r\n          'phone': '',\r\n          'designation': '',\r\n          'selected': false,\r\n          'starred': false,\r\n          'frequently': false,\r\n        }} onSaveContact={this.onSaveContact}\r\n                    onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>\r\n\r\n        {showMessage && message.info(<span id=\"message-id\">{alertMessage}</span>, 3, this.handleRequestClose)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n"],"sourceRoot":""}