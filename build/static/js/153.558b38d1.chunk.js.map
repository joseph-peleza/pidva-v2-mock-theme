{"version":3,"sources":["routes/extensions/map/googlemap/eventHanlder/Components/EventHandler.js","routes/extensions/map/googlemap/eventHanlder/index.js"],"names":["google","window","GettingPropertiesExampleGoogleMap","withGoogleMap","props","ref","onMapMounted","onZoomChanged","defaultCenter","center","zoom","defaultPosition","className","content","EventHandler","state","handleMapMounted","bind","handleZoomChanged","map","this","_map","nextZoom","getZoom","setState","loadingElement","style","height","containerElement","mapElement","maps","LatLng","Component","EventHanlder","title","IntlMessages","id"],"mappings":"kOAGMA,EAASC,OAAOD,OAChBE,EAAoCC,yBAAc,SAAAC,GAAK,OAC3D,cAAC,YAAD,CACEC,IAAKD,EAAME,aACXC,cAAeH,EAAMG,cACrBC,cAAeJ,EAAMK,OACrBC,KAAMN,EAAMM,KAJd,SAME,cAAC,aAAD,CACEC,gBAAiBP,EAAMK,OADzB,SAGE,qBAAKG,UAAU,iBAAf,SAAiCR,EAAMS,iBAUxBC,E,4MAEnBC,MAAQ,CACNL,KAAM,GACNG,QAAQ,yB,EAGVG,iBAAmB,EAAKA,iBAAiBC,KAAtB,gB,EACnBC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gB,sDAEpB,SAAiBE,GACfC,KAAKC,KAAOF,I,+BAGd,WACE,IAAMG,EAAWF,KAAKC,KAAKE,UACvBD,IAAaF,KAAKL,MAAML,MAG1BU,KAAKI,SAAS,CACZd,KAAMY,EACNT,QAAQ,SAAD,OAAWS,O,oBAKxB,WACE,OACE,cAACpB,EAAD,CACEuB,eAAgB,qBAAKC,MAAO,CAACC,OAAO,UACpCC,iBAAkB,qBAAKF,MAAO,CAACC,OAAO,WACtCE,WAAY,qBAAKH,MAAO,CAACC,OAAO,UAChCrB,aAAcc,KAAKJ,iBACnBT,cAAea,KAAKF,kBACpBT,OAAQ,IAAIT,EAAO8B,KAAKC,OAAO,WAAY,YAC3CrB,KAAMU,KAAKL,MAAML,KACjBG,QAASO,KAAKL,MAAMF,c,GApCcmB,a,OCV3BC,UARM,WACnB,OACE,mBAAMrB,UAAU,UAAUsB,MAAO,cAACC,EAAA,EAAD,CAAcC,GAAG,8BAAlD,SACE,cAAC,EAAD","file":"static/js/153.558b38d1.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {GoogleMap, InfoWindow, withGoogleMap} from \"react-google-maps\";\r\n\r\nconst google = window.google;\r\nconst GettingPropertiesExampleGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    ref={props.onMapMounted}\r\n    onZoomChanged={props.onZoomChanged}\r\n    defaultCenter={props.center}\r\n    zoom={props.zoom}\r\n  >\r\n    <InfoWindow\r\n      defaultPosition={props.center}\r\n    >\r\n      <div className=\"gx-map-content\">{props.content}</div>\r\n    </InfoWindow>\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\r\n *\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nexport default class EventHandler extends Component {\r\n\r\n  state = {\r\n    zoom: 15,\r\n    content: `Change the zoom level`,\r\n  };\r\n\r\n  handleMapMounted = this.handleMapMounted.bind(this);\r\n  handleZoomChanged = this.handleZoomChanged.bind(this);\r\n\r\n  handleMapMounted(map) {\r\n    this._map = map;\r\n  }\r\n\r\n  handleZoomChanged() {\r\n    const nextZoom = this._map.getZoom();\r\n    if (nextZoom !== this.state.zoom) {\r\n      // Notice: Check zoom equality here,\r\n      // or it will fire zoom_changed event infinitely\r\n      this.setState({\r\n        zoom: nextZoom,\r\n        content: `Zoom: ${nextZoom}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GettingPropertiesExampleGoogleMap\r\n        loadingElement={<div style={{height: `100%`}}/>}\r\n        containerElement={<div style={{height: `550px`}}/>}\r\n        mapElement={<div style={{height: `100%`}}/>}\r\n        onMapMounted={this.handleMapMounted}\r\n        onZoomChanged={this.handleZoomChanged}\r\n        center={new google.maps.LatLng(47.646935, -122.303763)}\r\n        zoom={this.state.zoom}\r\n        content={this.state.content}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {Card} from \"antd\";\r\n\r\nimport EventHandler from \"./Components/EventHandler\";\r\nimport IntlMessages from \"src/util/IntlMessages\";\r\n\r\nconst EventHanlder = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title={<IntlMessages id=\"sidebar.map.eventListener\"/>}>\r\n      <EventHandler/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EventHanlder;\r\n"],"sourceRoot":""}