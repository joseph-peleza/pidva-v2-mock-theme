{"version":3,"sources":["../node_modules/antd/es/divider/style/index.js","../node_modules/antd/es/divider/index.js","routes/components/table/Basic/Simple.js","routes/components/table/Basic/Selection.js","routes/components/table/Basic/Size.js","routes/components/table/Basic/Title.js","routes/components/table/Basic/ColRowSpan.js","routes/components/table/Basic/index.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Divider","props","React","ConfigConsumer","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","type","_props$orientation","orientation","className","children","dashed","plain","restProps","orientationPrefix","concat","hasChildren","classString","classNames","_defineProperty","_extends","role","columns","title","dataIndex","key","render","text","record","name","data","age","address","Simple","dataSource","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","disabled","Selection","Size","size","money","Title","bordered","footer","renderContent","value","row","index","obj","colSpan","rowSpan","tel","phone","ColRowSpan","BasicTable","span"],"mappings":"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","file":"static/js/47.255dfe51.chunk.js","sourcesContent":["import '../../style/index.less';\nimport './index.less';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import React from \"react\";\r\nimport {Card, Divider, Table} from \"antd\";\r\nimport { Icon } from \"@ant-design/compatible\";\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    render: text => <span className=\"gx-link\">{text}</span>,\r\n  },\r\n  {\r\n    title: 'Age',\r\n    dataIndex: 'age',\r\n    key: 'age',\r\n  },\r\n  {\r\n    title: 'Address',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    render: (text, record) => (\r\n      <span>\r\n      <span className=\"gx-link\">Action ä¸€ {record.name}</span>\r\n      <Divider type=\"vertical\"/>\r\n      <span className=\"gx-link\">Delete</span>\r\n      <Divider type=\"vertical\"/>\r\n      <span className=\"gx-link ant-dropdown-link\">\r\n        More actions <Icon type=\"down\"/>\r\n      </span>\r\n    </span>\r\n    ),\r\n  }\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'John Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Jim Green',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'Joe Black',\r\n    age: 32,\r\n    address: 'Sidney No. 1 Lake Park',\r\n  }\r\n];\r\n\r\nconst Simple = () => {\r\n  return (\r\n    <Card title=\"Simple Table\">\r\n      <Table className=\"gx-table-responsive\" columns={columns} dataSource={data}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Simple;\r\n","import React from \"react\";\r\nimport {Card, Table} from \"antd\";\r\n\r\nconst columns = [{\r\n  title: 'Name',\r\n  dataIndex: 'name',\r\n  render: text => <span className=\"gx-link\">{text}</span>,\r\n}, {\r\n  title: 'Age',\r\n  dataIndex: 'age',\r\n}, {\r\n  title: 'Address',\r\n  dataIndex: 'address',\r\n}];\r\nconst data = [{\r\n  key: '1',\r\n  name: 'John Brown',\r\n  age: 32,\r\n  address: 'New York No. 1 Lake Park',\r\n}, {\r\n  key: '2',\r\n  name: 'Jim Green',\r\n  age: 42,\r\n  address: 'London No. 1 Lake Park',\r\n}, {\r\n  key: '3',\r\n  name: 'Joe Black',\r\n  age: 32,\r\n  address: 'Sidney No. 1 Lake Park',\r\n}, {\r\n  key: '4',\r\n  name: 'Disabled User',\r\n  age: 99,\r\n  address: 'Sidney No. 1 Lake Park',\r\n}];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: record => ({\r\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\n\r\nconst Selection = () => {\r\n  return (\r\n    <Card title=\"Selection Table\">\r\n      <Table className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={data}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Selection;\r\n","import React from \"react\";\r\nimport {Card, Table} from \"antd\";\r\n\r\nconst columns = [{\r\n  title: 'Name',\r\n  dataIndex: 'name',\r\n}, {\r\n  title: 'Age',\r\n  dataIndex: 'age',\r\n}, {\r\n  title: 'Address',\r\n  dataIndex: 'address',\r\n}];\r\nconst data = [{\r\n  key: '1',\r\n  name: 'John Brown',\r\n  age: 32,\r\n  address: 'New York No. 1 Lake Park',\r\n}, {\r\n  key: '2',\r\n  name: 'Jim Green',\r\n  age: 42,\r\n  address: 'London No. 1 Lake Park',\r\n}, {\r\n  key: '3',\r\n  name: 'Joe Black',\r\n  age: 32,\r\n  address: 'Sidney No. 1 Lake Park',\r\n}];\r\n\r\nconst Size = () => {\r\n  return (\r\n    <Card title=\"Size Table\">\r\n      <h4>Middle size table</h4>\r\n      <Table className=\"gx-table-responsive\" columns={columns} dataSource={data} size=\"middle\"/>\r\n      <h4>Small size table</h4>\r\n      <Table className=\"gx-table-responsive\" columns={columns} dataSource={data} size=\"small\"/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Size;\r\n","import React from \"react\";\r\nimport {Card, Table} from \"antd\";\r\n\r\nconst columns = [{\r\n  title: 'Name',\r\n  dataIndex: 'name',\r\n  render: text => <span className=\"gx-link\">{text}</span>,\r\n}, {\r\n  title: 'Cash Assets',\r\n  className: 'column-money',\r\n  dataIndex: 'money',\r\n}, {\r\n  title: 'Address',\r\n  dataIndex: 'address',\r\n}];\r\n\r\nconst data = [{\r\n  key: '1',\r\n  name: 'John Brown',\r\n  money: 'ï¿¥300,000.00',\r\n  address: 'New York No. 1 Lake Park',\r\n}, {\r\n  key: '2',\r\n  name: 'Jim Green',\r\n  money: 'ï¿¥1,256,000.00',\r\n  address: 'London No. 1 Lake Park',\r\n}, {\r\n  key: '3',\r\n  name: 'Joe Black',\r\n  money: 'ï¿¥120,000.00',\r\n  address: 'Sidney No. 1 Lake Park',\r\n}];\r\n\r\nconst Title = () => {\r\n  return (\r\n    <Card title=\"Title Table\">\r\n      <Table className=\"gx-table-responsive\"\r\n             columns={columns}\r\n             dataSource={data}\r\n             bordered\r\n             title={() => 'Header'}\r\n             footer={() => 'Footer'}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport {Card, Table} from \"antd\";\r\n// In the fifth row, other columns are merged into first column\r\n// by setting it's colSpan to be 0\r\nconst renderContent = (value, row, index) => {\r\n  const obj = {\r\n    children: value,\r\n    props: {},\r\n  };\r\n  if (index === 4) {\r\n    obj.props.colSpan = 0;\r\n  }\r\n  return obj;\r\n};\r\n\r\nconst columns = [{\r\n  title: 'Name',\r\n  dataIndex: 'name',\r\n  render: (text, row, index) => {\r\n    if (index < 4) {\r\n      return <span className=\"gx-link\">{text}</span>;\r\n    }\r\n    return {\r\n      children: <span className=\"gx-link\">{text}</span>,\r\n      props: {\r\n        colSpan: 5,\r\n      },\r\n    };\r\n  },\r\n}, {\r\n  title: 'Age',\r\n  dataIndex: 'age',\r\n  render: renderContent,\r\n}, {\r\n  title: 'Home phone',\r\n  colSpan: 2,\r\n  dataIndex: 'tel',\r\n  render: (value, row, index) => {\r\n    const obj = {\r\n      children: value,\r\n      props: {},\r\n    };\r\n    if (index === 2) {\r\n      obj.props.rowSpan = 2;\r\n    }\r\n    // These two are merged into above cell\r\n    if (index === 3) {\r\n      obj.props.rowSpan = 0;\r\n    }\r\n    if (index === 4) {\r\n      obj.props.colSpan = 0;\r\n    }\r\n    return obj;\r\n  },\r\n}, {\r\n  title: 'Phone',\r\n  colSpan: 0,\r\n  dataIndex: 'phone',\r\n  render: renderContent,\r\n}, {\r\n  title: 'Address',\r\n  dataIndex: 'address',\r\n  render: renderContent,\r\n}];\r\n\r\nconst data = [{\r\n  key: '1',\r\n  name: 'John Brown',\r\n  age: 32,\r\n  tel: '0571-22098909',\r\n  phone: 18889898989,\r\n  address: 'New York No. 1 Lake Park',\r\n}, {\r\n  key: '2',\r\n  name: 'Jim Green',\r\n  tel: '0571-22098333',\r\n  phone: 18889898888,\r\n  age: 42,\r\n  address: 'London No. 1 Lake Park',\r\n}, {\r\n  key: '3',\r\n  name: 'Joe Black',\r\n  age: 32,\r\n  tel: '0575-22098909',\r\n  phone: 18900010002,\r\n  address: 'Sidney No. 1 Lake Park',\r\n}, {\r\n  key: '4',\r\n  name: 'Jim Red',\r\n  age: 18,\r\n  tel: '0575-22098909',\r\n  phone: 18900010002,\r\n  address: 'London No. 2 Lake Park',\r\n}, {\r\n  key: '5',\r\n  name: 'Jake White',\r\n  age: 18,\r\n  tel: '0575-22098909',\r\n  phone: 18900010002,\r\n  address: 'Dublin No. 2 Lake Park',\r\n}];\r\n\r\nconst ColRowSpan = () => {\r\n    return (\r\n      <Card title=\"ColSpan and RowSpan Table\">\r\n        <Table className=\"gx-table-responsive\" columns={columns} dataSource={data} bordered/>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default ColRowSpan;\r\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Simple from \"./Simple\";\r\nimport Selection from \"./Selection\";\r\nimport Size from \"./Size\";\r\nimport Title from \"./Title\";\r\nimport ColRowSpan from \"./ColRowSpan\";\r\n\r\n\r\nconst BasicTable = () => {\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <Simple/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <Selection/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <Size/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <Title/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <ColRowSpan/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BasicTable;\r\n"],"sourceRoot":""}