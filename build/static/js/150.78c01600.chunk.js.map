{"version":3,"sources":["routes/customViews/userAuth/SignUp/index.js"],"names":["FormItem","Form","Item","SignUP","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","getFieldDecorator","this","className","onSubmit","rules","required","message","prefix","type","style","color","placeholder","valuePropName","initialValue","to","htmlType","onClick","showAuthLoader","userGoogleSignIn","userFacebookSignIn","userGithubSignIn","userTwitterSignIn","Component","WrappedNormalSignUpForm","create"],"mappings":"uRAMMA,EAAWC,IAAKC,KAEhBC,E,4MAGJC,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,KAAKC,gBAAe,SAACC,EAAKC,GACnCC,QAAQC,IAAI,SAAUF,O,4CAI1B,WAAU,IAAD,OAEAG,EAAqBC,KAAKR,MAAMC,KAAhCM,kBAEP,OACE,qBAAKE,UAAU,qBAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,oBAAIA,UAAU,iBAAd,uBAEF,eAAC,IAAD,CAAMC,SAAUF,KAAKX,aAAcY,UAAU,6BAA7C,UACE,cAAChB,EAAD,UACGc,EAAkB,WAAY,CAC7BI,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,iCADnCN,CAGC,mBAAOO,OAAQ,cAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAACC,MAAO,qBACzCC,YAAY,gBAGvB,cAACzB,EAAD,UACGc,EAAkB,QAAS,CAC1BI,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,iCADnCN,CAGC,mBAAOO,OAAQ,cAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAACC,MAAO,qBACzCC,YAAY,qBAGvB,cAACzB,EAAD,UACGc,EAAkB,WAAY,CAC7BI,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,iCADnCN,CAGC,mBAAOO,OAAQ,cAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAACC,MAAO,qBAAuBF,KAAK,WACrEG,YAAY,gBAGvB,cAACzB,EAAD,UACGc,EAAkB,mBAAoB,CACrCI,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,iCADnCN,CAGC,mBAAOO,OAAQ,cAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAACC,MAAO,qBAAuBF,KAAK,WACrEG,YAAY,wBAGvB,eAACzB,EAAD,WACGc,EAAkB,WAAY,CAC7BY,cAAe,UACfC,cAAc,GAFfb,CAIC,6CAEF,cAAC,IAAD,CAAME,UAAU,uBAAuBY,GAAG,0CAA1C,gCAEF,cAAC5B,EAAD,CAAUgB,UAAU,iBAApB,SACE,mBAAQM,KAAK,UAAUO,SAAS,SAAhC,0BAKJ,sBAAKb,UAAU,cAAf,UACE,sBAAMA,UAAU,kBAAhB,gCACA,qBAAIA,UAAU,iBAAd,UACE,6BACE,cAAC,IAAD,CAAMM,KAAK,SAASQ,QAAS,WAC3B,EAAKvB,MAAMwB,iBACX,EAAKxB,MAAMyB,wBAGf,6BACE,cAAC,IAAD,CAAMV,KAAK,WAAWQ,QAAS,WAC7B,EAAKvB,MAAMwB,iBACX,EAAKxB,MAAM0B,0BAGf,6BACE,cAAC,IAAD,CAAMX,KAAK,SAASQ,QAAS,WAC3B,EAAKvB,MAAMwB,iBACX,EAAKxB,MAAM2B,wBAGf,6BACE,cAAC,IAAD,CAAMZ,KAAK,UAAUQ,QAAS,WAC5B,EAAKvB,MAAMwB,iBACX,EAAKxB,MAAM4B,wC,GA5FRC,aAuGfC,EAA0BpC,IAAKqC,QAALrC,CAAcE,GAE/BkC","file":"static/js/150.78c01600.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport { Button, Checkbox, Input } from \"antd\";\r\nimport { Form, Icon } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass SignUP extends Component {\r\n\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log(\"values\", values)\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const {getFieldDecorator} = this.props.form;\r\n\r\n    return (\r\n      <div className=\"gx-login-container\">\r\n        <div className=\"gx-login-content\">\r\n          <div className=\"gx-login-header gx-text-center\">\r\n            <h1 className=\"gx-login-title\">Sign Up</h1>\r\n          </div>\r\n          <Form onSubmit={this.handleSubmit} className=\"gx-login-form gx-form-row0\">\r\n            <FormItem>\r\n              {getFieldDecorator('uaername', {\r\n                rules: [{required: true, message: 'Please input your username!'}],\r\n              })(\r\n                <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                       placeholder=\"Username\"/>\r\n              )}\r\n            </FormItem>\r\n            <FormItem>\r\n              {getFieldDecorator('email', {\r\n                rules: [{required: true, message: 'Please input your username!'}],\r\n              })(\r\n                <Input prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                       placeholder=\"Email address\"/>\r\n              )}\r\n            </FormItem>\r\n            <FormItem>\r\n              {getFieldDecorator('password', {\r\n                rules: [{required: true, message: 'Please input your Password!'}],\r\n              })(\r\n                <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\r\n                       placeholder=\"Password\"/>\r\n              )}\r\n            </FormItem>\r\n            <FormItem>\r\n              {getFieldDecorator('confirm-password', {\r\n                rules: [{required: true, message: 'Please input your Password!'}],\r\n              })(\r\n                <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\r\n                       placeholder=\"Confirm Password\"/>\r\n              )}\r\n            </FormItem>\r\n            <FormItem>\r\n              {getFieldDecorator('remember', {\r\n                valuePropName: 'checked',\r\n                initialValue: true,\r\n              })(\r\n                <Checkbox>Remember me</Checkbox>\r\n              )}\r\n              <Link className=\"gx-login-form-forgot\" to=\"/custom-views/user-auth/forgot-password\">Forgot password</Link>\r\n            </FormItem>\r\n            <FormItem className=\"gx-text-center\">\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </FormItem>\r\n          </Form>\r\n          <div className=\"gx-flex-row\">\r\n            <span className=\"gx-mb-2 gx-mr-3\">or Sign up using: </span>\r\n            <ul className=\"gx-social-link\">\r\n              <li>\r\n                <Icon type=\"google\" onClick={() => {\r\n                  this.props.showAuthLoader();\r\n                  this.props.userGoogleSignIn();\r\n                }}/>\r\n              </li>\r\n              <li>\r\n                <Icon type=\"facebook\" onClick={() => {\r\n                  this.props.showAuthLoader();\r\n                  this.props.userFacebookSignIn();\r\n                }}/>\r\n              </li>\r\n              <li>\r\n                <Icon type=\"github\" onClick={() => {\r\n                  this.props.showAuthLoader();\r\n                  this.props.userGithubSignIn();\r\n                }}/>\r\n              </li>\r\n              <li>\r\n                <Icon type=\"twitter\" onClick={() => {\r\n                  this.props.showAuthLoader();\r\n                  this.props.userTwitterSignIn();\r\n                }}/>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalSignUpForm = Form.create()(SignUP);\r\n\r\nexport default WrappedNormalSignUpForm;\r\n"],"sourceRoot":""}