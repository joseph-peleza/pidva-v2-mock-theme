{"version":3,"sources":["../node_modules/@amcharts/amcharts3-react/index.js","../node_modules/@amcharts/amcharts3-react/amcharts3-react.js","routes/extensions/map/ammap/groupedCountries/Components/GroupedCountriesMap.js","routes/extensions/map/ammap/groupedCountries/index.js"],"names":["window","React","require","ReactDOM","createReactClass","module","exports","AmCharts","getType","x","toString","call","hasOwnKey","obj","key","hasOwnProperty","copy","length","output","Array","i","copyArray","copyObject","Date","getTime","isNaN","removeChartListeners","chart","y","xLength","yLength","xValue","has","j","yValue","event","method","removeListener","update","didUpdate","xType","a","updateArray","updateObject","isNumberEqual","oldObj","newObj","id","getInitialState","componentDidMount","props","this","options","makeChart","state","delay","setState","componentDidUpdate","oldProps","validateNow","componentWillUnmount","clear","render","createElement","className","style","GroupedCountriesMap","width","height","GroupedCountries","title","IntlMessages"],"mappings":"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QAAW,cACV,CACD,MAAS,QACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,cACV,CACD,MAAS,SACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,cACV,CACD,MAAS,QACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,cACV,CACD,MAAS,SACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,cACV,CACD,MAAS,UACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,cACV,CACD,MAAS,UACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,cACV,CACD,MAAS,aACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,cACV,CACD,MAAS,cACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,cACV,CACD,MAAS,WACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,cACV,CACD,MAAS,YACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,SACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,kBACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,WACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,WACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,UACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,UACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,SACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,QACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,SACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,UACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,WACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,QACV,CACD,MAAS,UACT,GAAM,KACN,MAAS,UACT,WAAc,OACd,QAAW,UAKf,cAAiB,CACf,qBAAwB,UACxB,cAAiB,UACjB,MAAS,GACT,mBAAsB,GACtB,YAAe,yCAIjB,OAAU,CACR,MAAS,OACT,YAAe,GACf,WAAc,GACd,aAAe,EACf,gBAAmB,GACnB,gBAAmB,UACnB,YAAe,UACf,YAAe,EACf,IAAO,IACP,KAAQ,EACR,cAAiB,GACjB,KAAQ,CAAC,CACP,MAAS,wBACT,MAAS,WACR,CACD,MAAS,iBACT,MAAS,WACR,CACD,MAAS,iBACT,MAAS,WACR,CACD,MAAS,iBACT,MAAS,aAGb,OAAU,CACR,SAAW,S,OC/MFiB,UARU,WACvB,OACE,mBAAML,UAAU,UAAUM,MAAO,cAACC,EAAA,EAAD,CAAcxB,GAAG,kCAAlD,SACE,cAAC,EAAD","file":"static/js/95.2176748d.chunk.js","sourcesContent":["if (typeof window !== \"undefined\") {\r\n  window.React = require(\"react\");\r\n  window.ReactDOM = require(\"react-dom\");\r\n  window.createReactClass = require(\"create-react-class\");\r\n\r\n  require(\"./amcharts3-react.js\");\r\n\r\n  module.exports = window.AmCharts;\r\n\r\n} else {\r\n  module.exports = {};\r\n}\r\n","(function () {\r\n  function getType(x) {\r\n    // TODO make this faster ?\r\n    return {}.toString.call(x);\r\n  }\r\n\r\n  function hasOwnKey(obj, key) {\r\n    return {}.hasOwnProperty.call(obj, key);\r\n  }\r\n\r\n\r\n  function copyObject(x) {\r\n    var output = {};\r\n\r\n    // TODO use Object.keys ?\r\n    for (var key in x) {\r\n      if (hasOwnKey(x, key)) {\r\n        output[key] = copy(x[key]);\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  function copyArray(x) {\r\n    var length = x.length;\r\n\r\n    var output = new Array(length);\r\n\r\n    for (var i = 0; i < length; ++i) {\r\n      output[i] = copy(x[i]);\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  // TODO can this be made faster ?\r\n  // TODO what about regexps, etc. ?\r\n  function copy(x) {\r\n    switch (getType(x)) {\r\n    case \"[object Array]\":\r\n      return copyArray(x);\r\n\r\n    case \"[object Object]\":\r\n      return copyObject(x);\r\n\r\n    // TODO is this necessary ?\r\n    case \"[object Date]\":\r\n      return new Date(x.getTime());\r\n\r\n    default:\r\n      return x;\r\n    }\r\n  }\r\n\r\n\r\n  function isNaN(x) {\r\n    return x !== x;\r\n  }\r\n\r\n  function isNumberEqual(x, y) {\r\n    return x === y || (isNaN(x) && isNaN(y));\r\n  }\r\n\r\n\r\n  function removeChartListeners(chart, x, y) {\r\n    if (x !== y) {\r\n      // TODO is this necessary ?\r\n      if (x == null) {\r\n        x = [];\r\n      }\r\n\r\n      // TODO is this necessary ?\r\n      if (y == null) {\r\n        y = [];\r\n      }\r\n\r\n      var xLength = x.length;\r\n      var yLength = y.length;\r\n\r\n      for (var i = 0; i < xLength; ++i) {\r\n        var xValue = x[i];\r\n\r\n        var has = false;\r\n\r\n        // TODO make this faster ?\r\n        for (var j = 0; j < yLength; ++j) {\r\n          var yValue = y[j];\r\n\r\n          // TODO is this correct ?\r\n          if (xValue.event  === yValue.event &&\r\n              xValue.method === yValue.method) {\r\n            has = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!has) {\r\n          // TODO is this correct ?\r\n          chart.removeListener(chart, xValue.event, xValue.method);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  function updateArray(a, x, y) {\r\n    var didUpdate = false;\r\n\r\n    if (x !== y) {\r\n      var xLength = x.length;\r\n      var yLength = y.length;\r\n\r\n      if (xLength !== yLength) {\r\n        a.length = yLength;\r\n        didUpdate = true;\r\n      }\r\n\r\n      for (var i = 0; i < yLength; ++i) {\r\n        if (i < xLength) {\r\n          if (update(a, i, x[i], y[i])) {\r\n            didUpdate = true;\r\n          }\r\n\r\n        } else {\r\n          // TODO make this faster ?\r\n          a[i] = copy(y[i]);\r\n          // TODO is this necessary ?\r\n          didUpdate = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return didUpdate;\r\n  }\r\n\r\n\r\n  function update(obj, key, x, y) {\r\n    var didUpdate = false;\r\n\r\n    if (x !== y) {\r\n      // https://github.com/amcharts/amcharts3-react/issues/40\r\n      if (hasOwnKey(obj, key)) {\r\n        var xType = getType(x);\r\n        var yType = getType(y);\r\n\r\n        if (xType === yType) {\r\n          switch (xType) {\r\n          case \"[object Array]\":\r\n            // TODO hacky, remove this after the following bug is fixed:\r\n            //      Zendesk #28040\r\n            //      https://codepen.io/team/amcharts/pen/0d61f559cda74682c0ca55d9a24a0f77\r\n            //      https://www.amcharts.com/kbase/forcing-grouping-stock-chart-data-specific-periods/\r\n            if (key === \"groupToPeriods\") {\r\n              // TODO is the copy necessary ?\r\n              obj[key] = copy(y);\r\n              didUpdate = true;\r\n\r\n            } else {\r\n              if (updateArray(obj[key], x, y)) {\r\n                didUpdate = true;\r\n              }\r\n            }\r\n            break;\r\n\r\n          case \"[object Object]\":\r\n            if (updateObject(obj[key], x, y)) {\r\n              didUpdate = true;\r\n            }\r\n            break;\r\n\r\n          case \"[object Date]\":\r\n            if (x.getTime() !== y.getTime()) {\r\n              // TODO make this faster ?\r\n              obj[key] = copy(y);\r\n              didUpdate = true;\r\n            }\r\n            break;\r\n\r\n          case \"[object Number]\":\r\n            if (!isNumberEqual(x, y)) {\r\n              // TODO is the copy necessary ?\r\n              obj[key] = copy(y);\r\n              didUpdate = true;\r\n            }\r\n            break;\r\n\r\n          default:\r\n            // TODO is the copy necessary ?\r\n            obj[key] = copy(y);\r\n            didUpdate = true;\r\n            break;\r\n          }\r\n\r\n        // TODO is this correct ?\r\n        } else {\r\n          // TODO make this faster ?\r\n          obj[key] = copy(y);\r\n          didUpdate = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return didUpdate;\r\n  }\r\n\r\n  function updateObject(chart, oldObj, newObj) {\r\n    var didUpdate = false;\r\n\r\n    if (oldObj !== newObj) {\r\n      // TODO use Object.keys ?\r\n      for (var key in newObj) {\r\n        if (hasOwnKey(newObj, key)) {\r\n          // TODO make this faster ?\r\n          if (hasOwnKey(oldObj, key)) {\r\n            // TODO should this count as an update ?\r\n            if (key === \"listeners\") {\r\n              // TODO make this faster ?\r\n              removeChartListeners(chart, oldObj[key], newObj[key]);\r\n            }\r\n\r\n            if (update(chart, key, oldObj[key], newObj[key])) {\r\n              didUpdate = true;\r\n            }\r\n\r\n          } else {\r\n            // TODO make this faster ?\r\n            chart[key] = copy(newObj[key]);\r\n            didUpdate = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      // TODO use Object.keys ?\r\n      for (var key in oldObj) {\r\n        if (hasOwnKey(oldObj, key) && !hasOwnKey(newObj, key)) {\r\n          if (key === \"listeners\") {\r\n            removeChartListeners(chart, oldObj[key], []);\r\n          }\r\n\r\n          delete chart[key];\r\n          didUpdate = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return didUpdate;\r\n  }\r\n\r\n\r\n  var id = 0;\r\n\r\n  AmCharts.React = createReactClass({\r\n    getInitialState: function () {\r\n      return {\r\n        id: \"__AmCharts_React_\" + (++id) + \"__\",\r\n        chart: null\r\n      };\r\n    },\r\n\r\n    componentDidMount: function () {\r\n      // AmCharts mutates the config object, so we have to make a deep copy to prevent that\r\n      var props = copy(this.props.options);\r\n\r\n      var chart = AmCharts.makeChart(this.state.id, props, this.props.delay);\r\n\r\n      this.setState({\r\n        chart: chart\r\n      });\r\n    },\r\n\r\n    // TODO is this correct ? should this use componentWillUpdate instead ?\r\n    componentDidUpdate: function (oldProps) {\r\n      if (this.state.chart) {\r\n        var didUpdate = updateObject(this.state.chart, oldProps.options, this.props.options);\r\n\r\n        // TODO make this faster\r\n        if (didUpdate) {\r\n          this.state.chart.validateNow(true);\r\n        }\r\n      }\r\n    },\r\n\r\n    componentWillUnmount: function () {\r\n      if (this.state.chart) {\r\n        this.state.chart.clear();\r\n      }\r\n    },\r\n\r\n    render: function () {\r\n      return React.createElement(\"div\", {\r\n        id: this.state.id,\r\n        className: this.props.className,\r\n        style: this.props.style\r\n      });\r\n    }\r\n  });\r\n})();\r\n","import React from 'react';\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst GroupedCountriesMap = () => {\r\n\r\n  const config = {\r\n    \"type\": \"map\",\r\n    \"theme\": \"none\",\r\n    \"dataProvider\": {\r\n      \"map\": \"worldHigh\",\r\n      \"zoomLevel\": 3.5,\r\n      \"zoomLongitude\": 10,\r\n      \"zoomLatitude\": 52,\r\n      \"areas\": [{\r\n        \"title\": \"Austria\",\r\n        \"id\": \"AT\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1995\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Ireland\",\r\n        \"id\": \"IE\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1973\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Denmark\",\r\n        \"id\": \"DK\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1973\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Finland\",\r\n        \"id\": \"FI\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1995\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Sweden\",\r\n        \"id\": \"SE\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1995\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Great Britain\",\r\n        \"id\": \"GB\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1973\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Italy\",\r\n        \"id\": \"IT\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1957\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"France\",\r\n        \"id\": \"FR\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1957\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Spain\",\r\n        \"id\": \"ES\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1986\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Greece\",\r\n        \"id\": \"GR\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1981\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Germany\",\r\n        \"id\": \"DE\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1957\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Belgium\",\r\n        \"id\": \"BE\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1957\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Luxembourg\",\r\n        \"id\": \"LU\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1957\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Netherlands\",\r\n        \"id\": \"NL\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1957\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Portugal\",\r\n        \"id\": \"PT\",\r\n        \"color\": \"#67b7dc\",\r\n        \"customData\": \"1986\",\r\n        \"groupId\": \"before2004\"\r\n      }, {\r\n        \"title\": \"Lithuania\",\r\n        \"id\": \"LT\",\r\n        \"color\": \"#ebdb8b\",\r\n        \"customData\": \"2004\",\r\n        \"groupId\": \"2004\"\r\n      }, {\r\n        \"title\": \"Latvia\",\r\n        \"id\": \"LV\",\r\n        \"color\": \"#ebdb8b\",\r\n        \"customData\": \"2004\",\r\n        \"groupId\": \"2004\"\r\n      }, {\r\n        \"title\": \"Czech Republic \",\r\n        \"id\": \"CZ\",\r\n        \"color\": \"#ebdb8b\",\r\n        \"customData\": \"2004\",\r\n        \"groupId\": \"2004\"\r\n      }, {\r\n        \"title\": \"Slovakia\",\r\n        \"id\": \"SK\",\r\n        \"color\": \"#ebdb8b\",\r\n        \"customData\": \"2004\",\r\n        \"groupId\": \"2004\"\r\n      }, {\r\n        \"title\": \"Slovenia\",\r\n        \"id\": \"SI\",\r\n        \"color\": \"#ebdb8b\",\r\n        \"customData\": \"2004\",\r\n        \"groupId\": \"2004\"\r\n      }, {\r\n        \"title\": \"Estonia\",\r\n        \"id\": \"EE\",\r\n        \"color\": \"#ebdb8b\",\r\n        \"customData\": \"2004\",\r\n        \"groupId\": \"2004\"\r\n      }, {\r\n        \"title\": \"Hungary\",\r\n        \"id\": \"HU\",\r\n        \"color\": \"#ebdb8b\",\r\n        \"customData\": \"2004\",\r\n        \"groupId\": \"2004\"\r\n      }, {\r\n        \"title\": \"Cyprus\",\r\n        \"id\": \"CY\",\r\n        \"color\": \"#ebdb8b\",\r\n        \"customData\": \"2004\",\r\n        \"groupId\": \"2004\"\r\n      }, {\r\n        \"title\": \"Malta\",\r\n        \"id\": \"MT\",\r\n        \"color\": \"#ebdb8b\",\r\n        \"customData\": \"2004\",\r\n        \"groupId\": \"2004\"\r\n      }, {\r\n        \"title\": \"Poland\",\r\n        \"id\": \"PL\",\r\n        \"color\": \"#ebdb8b\",\r\n        \"customData\": \"2004\",\r\n        \"groupId\": \"2004\"\r\n      }, {\r\n        \"title\": \"Romania\",\r\n        \"id\": \"RO\",\r\n        \"color\": \"#83c2ba\",\r\n        \"customData\": \"2007\",\r\n        \"groupId\": \"2007\"\r\n      }, {\r\n        \"title\": \"Bulgaria\",\r\n        \"id\": \"BG\",\r\n        \"color\": \"#83c2ba\",\r\n        \"customData\": \"2007\",\r\n        \"groupId\": \"2007\"\r\n      }, {\r\n        \"title\": \"Croatia\",\r\n        \"id\": \"HR\",\r\n        \"color\": \"#db8383\",\r\n        \"customData\": \"2013\",\r\n        \"groupId\": \"2013\"\r\n      }\r\n      ]\r\n    },\r\n\r\n    \"areasSettings\": {\r\n      \"rollOverOutlineColor\": \"#FFFFFF\",\r\n      \"rollOverColor\": \"#CC0000\",\r\n      \"alpha\": 0.8,\r\n      \"unlistedAreasAlpha\": 0.1,\r\n      \"balloonText\": \"[[title]] joined EU at [[customData]]\"\r\n    },\r\n\r\n\r\n    \"legend\": {\r\n      \"width\": \"100%\",\r\n      \"marginRight\": 27,\r\n      \"marginLeft\": 27,\r\n      \"equalWidths\": false,\r\n      \"backgroundAlpha\": 0.5,\r\n      \"backgroundColor\": \"#FFFFFF\",\r\n      \"borderColor\": \"#ffffff\",\r\n      \"borderAlpha\": 1,\r\n      \"top\": 450,\r\n      \"left\": 0,\r\n      \"horizontalGap\": 10,\r\n      \"data\": [{\r\n        \"title\": \"EU member before 2004\",\r\n        \"color\": \"#67b7dc\"\r\n      }, {\r\n        \"title\": \"Joined at 2004\",\r\n        \"color\": \"#ebdb8b\"\r\n      }, {\r\n        \"title\": \"Joined at 2007\",\r\n        \"color\": \"#83c2ba\"\r\n      }, {\r\n        \"title\": \"Joined at 2013\",\r\n        \"color\": \"#db8383\"\r\n      }]\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GroupedCountriesMap;\r\n","import React from \"react\";\r\nimport {Card} from \"antd\";\r\n\r\nimport GroupedCountriesMap from \"./Components/GroupedCountriesMap\";\r\nimport IntlMessages from \"src/util/IntlMessages\";\r\n\r\nconst GroupedCountries = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title={<IntlMessages id=\"sidebar.map.grouped.countries\"/>}>\r\n      <GroupedCountriesMap/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GroupedCountries;\r\n"],"sourceRoot":""}