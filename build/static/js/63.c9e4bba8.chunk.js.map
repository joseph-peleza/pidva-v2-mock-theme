{"version":3,"sources":["../node_modules/antd/es/tree/utils/iconUtil.js","../node_modules/antd/es/tree-select/index.js","routes/components/dataEntry/TreeSelect/Basic.js","routes/components/dataEntry/TreeSelect/MultipleSelection.js","routes/components/dataEntry/TreeSelect/GenerateTreeData.js","routes/components/dataEntry/TreeSelect/Checkable.js","routes/components/dataEntry/TreeSelect/index.js"],"names":["renderSwitcherIcon","prefixCls","switcherIcon","showLine","_ref","showLeafIcon","isLeaf","expanded","loading","React","LoadingOutlined","className","concat","_typeof","FileOutlined","switcherCls","isValidElement","cloneElement","classNames","props","MinusSquareOutlined","PlusSquareOutlined","CaretDownFilled","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","InternalTreeSelect","_a","ref","_classNames2","customizePrefixCls","customizeSize","size","_a$bordered","bordered","treeCheckable","multiple","_a$listHeight","listHeight","_a$listItemHeight","listItemHeight","notFoundContent","_switcherIcon","treeLine","getPopupContainer","dropdownClassName","_a$treeIcon","treeIcon","transitionName","_a$choiceTransitionNa","choiceTransitionName","_React$useContext","ConfigContext","getContextPopupContainer","getPrefixCls","renderEmpty","direction","virtual","dropdownMatchSelectWidth","SizeContext","devWarning","mergedNotFound","treePrefixCls","treeSelectPrefixCls","mergedDropdownClassName","_defineProperty","isMultiple","_getIcons","getIcons","_extends","suffixIcon","removeIcon","clearIcon","undefined","selectProps","omit","mergedSize","mergedClassName","rootPrefixCls","RcTreeSelect","inputIcon","nodeProps","showTreeIcon","treeMotion","getTransitionName","TreeSelect","TreeNode","SHOW_ALL","SHOW_PARENT","SHOW_CHILD","Basic","state","value","onChange","setState","title","showSearch","this","dropdownStyle","maxHeight","overflow","placeholder","allowClear","treeDefaultExpandAll","style","color","Component","MultipleSelection","treeData","key","children","GenerateTreeData","Checkable","tProps","showCheckedStrategy","searchPlaceholder","width","lg","md","sm","xs"],"mappings":"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","file":"static/js/63.c9e4bba8.chunk.js","sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport MinusSquareOutlined from \"@ant-design/icons/es/icons/MinusSquareOutlined\";\nimport PlusSquareOutlined from \"@ant-design/icons/es/icons/PlusSquareOutlined\";\nimport CaretDownFilled from \"@ant-design/icons/es/icons/CaretDownFilled\";\nimport { isValidElement, cloneElement } from '../../_util/reactNode';\nexport default function renderSwitcherIcon(prefixCls, switcherIcon, showLine, _ref) {\n  var isLeaf = _ref.isLeaf,\n      expanded = _ref.expanded,\n      loading = _ref.loading;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-loading-icon\")\n    });\n  }\n\n  var showLeafIcon;\n\n  if (showLine && _typeof(showLine) === 'object') {\n    showLeafIcon = showLine.showLeafIcon;\n  }\n\n  if (isLeaf) {\n    if (showLine) {\n      if (_typeof(showLine) === 'object' && !showLeafIcon) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-switcher-leaf-line\")\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(FileOutlined, {\n        className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n      });\n    }\n\n    return null;\n  }\n\n  var switcherCls = \"\".concat(prefixCls, \"-switcher-icon\");\n\n  if (isValidElement(switcherIcon)) {\n    return cloneElement(switcherIcon, {\n      className: classNames(switcherIcon.props.className || '', switcherCls)\n    });\n  }\n\n  if (switcherIcon) {\n    return switcherIcon;\n  }\n\n  if (showLine) {\n    return expanded ? /*#__PURE__*/React.createElement(MinusSquareOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n    }) : /*#__PURE__*/React.createElement(PlusSquareOutlined, {\n      className: \"\".concat(prefixCls, \"-switcher-line-icon\")\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CaretDownFilled, {\n    className: switcherCls\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport RcTreeSelect, { TreeNode, SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from 'rc-tree-select';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport getIcons from '../select/utils/iconUtil';\nimport renderSwitcherIcon from '../tree/utils/iconUtil';\nimport SizeContext from '../config-provider/SizeContext';\nimport { getTransitionName } from '../_util/motion';\n\nvar InternalTreeSelect = function InternalTreeSelect(_a, ref) {\n  var _classNames2;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeSize = _a.size,\n      _a$bordered = _a.bordered,\n      bordered = _a$bordered === void 0 ? true : _a$bordered,\n      className = _a.className,\n      treeCheckable = _a.treeCheckable,\n      multiple = _a.multiple,\n      _a$listHeight = _a.listHeight,\n      listHeight = _a$listHeight === void 0 ? 256 : _a$listHeight,\n      _a$listItemHeight = _a.listItemHeight,\n      listItemHeight = _a$listItemHeight === void 0 ? 26 : _a$listItemHeight,\n      notFoundContent = _a.notFoundContent,\n      _switcherIcon = _a.switcherIcon,\n      treeLine = _a.treeLine,\n      getPopupContainer = _a.getPopupContainer,\n      dropdownClassName = _a.dropdownClassName,\n      _a$treeIcon = _a.treeIcon,\n      treeIcon = _a$treeIcon === void 0 ? false : _a$treeIcon,\n      transitionName = _a.transitionName,\n      _a$choiceTransitionNa = _a.choiceTransitionName,\n      choiceTransitionName = _a$choiceTransitionNa === void 0 ? '' : _a$choiceTransitionNa,\n      props = __rest(_a, [\"prefixCls\", \"size\", \"bordered\", \"className\", \"treeCheckable\", \"multiple\", \"listHeight\", \"listItemHeight\", \"notFoundContent\", \"switcherIcon\", \"treeLine\", \"getPopupContainer\", \"dropdownClassName\", \"treeIcon\", \"transitionName\", \"choiceTransitionName\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getContextPopupContainer = _React$useContext.getPopupContainer,\n      getPrefixCls = _React$useContext.getPrefixCls,\n      renderEmpty = _React$useContext.renderEmpty,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual,\n      dropdownMatchSelectWidth = _React$useContext.dropdownMatchSelectWidth;\n\n  var size = React.useContext(SizeContext);\n  devWarning(multiple !== false || !treeCheckable, 'TreeSelect', '`multiple` will always be `true` when `treeCheckable` is true');\n  var prefixCls = getPrefixCls('select', customizePrefixCls);\n  var treePrefixCls = getPrefixCls('select-tree', customizePrefixCls);\n  var treeSelectPrefixCls = getPrefixCls('tree-select', customizePrefixCls);\n  var mergedDropdownClassName = classNames(dropdownClassName, \"\".concat(treeSelectPrefixCls, \"-dropdown\"), _defineProperty({}, \"\".concat(treeSelectPrefixCls, \"-dropdown-rtl\"), direction === 'rtl'));\n  var isMultiple = !!(treeCheckable || multiple); // ===================== Icons =====================\n\n  var _getIcons = getIcons(_extends(_extends({}, props), {\n    multiple: isMultiple,\n    prefixCls: prefixCls\n  })),\n      suffixIcon = _getIcons.suffixIcon,\n      removeIcon = _getIcons.removeIcon,\n      clearIcon = _getIcons.clearIcon; // ===================== Empty =====================\n\n\n  var mergedNotFound;\n\n  if (notFoundContent !== undefined) {\n    mergedNotFound = notFoundContent;\n  } else {\n    mergedNotFound = renderEmpty('Select');\n  } // ==================== Render =====================\n\n\n  var selectProps = omit(props, ['suffixIcon', 'itemIcon', 'removeIcon', 'clearIcon', 'switcherIcon']);\n  var mergedSize = customizeSize || size;\n  var mergedClassName = classNames(!customizePrefixCls && treeSelectPrefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-lg\"), mergedSize === 'large'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-sm\"), mergedSize === 'small'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-borderless\"), !bordered), _classNames2), className);\n  var rootPrefixCls = getPrefixCls();\n  return /*#__PURE__*/React.createElement(RcTreeSelect, _extends({\n    virtual: virtual,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth\n  }, selectProps, {\n    ref: ref,\n    prefixCls: prefixCls,\n    className: mergedClassName,\n    listHeight: listHeight,\n    listItemHeight: listItemHeight,\n    treeCheckable: treeCheckable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-tree-checkbox-inner\")\n    }) : treeCheckable,\n    inputIcon: suffixIcon,\n    multiple: multiple,\n    removeIcon: removeIcon,\n    clearIcon: clearIcon,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return renderSwitcherIcon(treePrefixCls, _switcherIcon, treeLine, nodeProps);\n    },\n    showTreeIcon: treeIcon,\n    notFoundContent: mergedNotFound,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    treeMotion: null,\n    dropdownClassName: mergedDropdownClassName,\n    choiceTransitionName: getTransitionName(rootPrefixCls, '', choiceTransitionName),\n    transitionName: getTransitionName(rootPrefixCls, 'slide-up', transitionName)\n  }));\n};\n\nvar TreeSelectRef = /*#__PURE__*/React.forwardRef(InternalTreeSelect);\nvar TreeSelect = TreeSelectRef;\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nexport { TreeNode };\nexport default TreeSelect;","import React from \"react\";\r\nimport {Card, TreeSelect} from \"antd\";\r\n\r\nconst TreeNode = TreeSelect.TreeNode;\r\n\r\n\r\nclass Basic extends React.Component {\r\n  state = {\r\n    value: undefined,\r\n  };\r\n  onChange = (value) => {\r\n    this.setState({value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Basic\">\r\n        <TreeSelect className=\"gx-w-100\"\r\n                    showSearch\r\n                    value={this.state.value}\r\n                    dropdownStyle={{maxHeight: 400, overflow: 'auto'}}\r\n                    placeholder=\"Please select\"\r\n                    allowClear\r\n                    treeDefaultExpandAll\r\n                    onChange={this.onChange}\r\n        >\r\n          <TreeNode value=\"parent 1\" title=\"parent 1\" key=\"0-1\">\r\n            <TreeNode value=\"parent 1-0\" title=\"parent 1-0\" key=\"0-1-1\">\r\n              <TreeNode value=\"leaf1\" title=\"my leaf\" key=\"random\"/>\r\n              <TreeNode value=\"leaf2\" title=\"your leaf\" key=\"random1\"/>\r\n            </TreeNode>\r\n            <TreeNode value=\"parent 1-1\" title=\"parent 1-1\" key=\"random2\">\r\n              <TreeNode value=\"sss\" title={<b style={{color: '#08c'}}>sss</b>} key=\"random3\"/>\r\n            </TreeNode>\r\n          </TreeNode>\r\n        </TreeSelect>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Basic;\r\n","import React from \"react\";\r\nimport {Card, TreeSelect} from \"antd\";\r\n\r\nconst TreeNode = TreeSelect.TreeNode;\r\n\r\n\r\nclass MultipleSelection extends React.Component {\r\n  state = {\r\n    value: undefined,\r\n  };\r\n  onChange = (value) => {\r\n    this.setState({value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Multiple Selection\">\r\n        <TreeSelect className=\"gx-w-100\"\r\n                    showSearch\r\n                    value={this.state.value}\r\n                    dropdownStyle={{maxHeight: 400, overflow: 'auto'}}\r\n                    placeholder=\"Please select\"\r\n                    allowClear\r\n                    multiple\r\n                    treeDefaultExpandAll\r\n                    onChange={this.onChange}\r\n        >\r\n          <TreeNode value=\"parent 1\" title=\"parent 1\" key=\"0-1\">\r\n            <TreeNode value=\"parent 1-0\" title=\"parent 1-0\" key=\"0-1-1\">\r\n              <TreeNode value=\"leaf1\" title=\"my leaf\" key=\"random\"/>\r\n              <TreeNode value=\"leaf2\" title=\"your leaf\" key=\"random1\"/>\r\n            </TreeNode>\r\n            <TreeNode value=\"parent 1-1\" title=\"parent 1-1\" key=\"random2\">\r\n              <TreeNode value=\"sss\" title={<b style={{color: '#08c'}}>sss</b>} key=\"random3\"/>\r\n            </TreeNode>\r\n          </TreeNode>\r\n        </TreeSelect>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultipleSelection;\r\n","import React from \"react\";\r\nimport {Card, TreeSelect} from \"antd\";\r\n\r\nconst treeData = [{\r\n  title: 'Node1',\r\n  value: '0-0',\r\n  key: '0-0',\r\n  children: [{\r\n    title: 'Child Node1',\r\n    value: '0-0-1',\r\n    key: '0-0-1',\r\n  }, {\r\n    title: 'Child Node2',\r\n    value: '0-0-2',\r\n    key: '0-0-2',\r\n  }],\r\n}, {\r\n  title: 'Node2',\r\n  value: '0-1',\r\n  key: '0-1',\r\n}];\r\n\r\nclass GenerateTreeData extends React.Component {\r\n  state = {\r\n    value: undefined,\r\n  };\r\n  onChange = (value) => {\r\n    this.setState({value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Generate TreeData\">\r\n        <TreeSelect className=\"gx-w-100\"\r\n                    value={this.state.value}\r\n                    dropdownStyle={{maxHeight: 400, overflow: 'auto'}}\r\n                    treeData={treeData}\r\n                    placeholder=\"Please select\"\r\n                    treeDefaultExpandAll\r\n                    onChange={this.onChange}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerateTreeData;\r\n","import React from \"react\";\r\nimport {Card, TreeSelect} from \"antd\";\r\n\r\nconst SHOW_PARENT = TreeSelect.SHOW_PARENT;\r\n\r\n\r\nconst treeData = [{\r\n  title: 'Node1',\r\n  value: '0-0',\r\n  key: '0-0',\r\n  children: [{\r\n    title: 'Child Node1',\r\n    value: '0-0-0',\r\n    key: '0-0-0',\r\n  }],\r\n}, {\r\n  title: 'Node2',\r\n  value: '0-1',\r\n  key: '0-1',\r\n  children: [{\r\n    title: 'Child Node3',\r\n    value: '0-1-0',\r\n    key: '0-1-0',\r\n  }, {\r\n    title: 'Child Node4',\r\n    value: '0-1-1',\r\n    key: '0-1-1',\r\n  }, {\r\n    title: 'Child Node5',\r\n    value: '0-1-2',\r\n    key: '0-1-2',\r\n  }],\r\n}];\r\n\r\nclass Checkable extends React.Component {\r\n  state = {\r\n    value: ['0-0-0'],\r\n  };\r\n  onChange = (value) => {\r\n    this.setState({value});\r\n  };\r\n\r\n  render() {\r\n    const tProps = {\r\n      treeData,\r\n      value: this.state.value,\r\n      onChange: this.onChange,\r\n      treeCheckable: true,\r\n      showCheckedStrategy: SHOW_PARENT,\r\n      searchPlaceholder: 'Please select',\r\n      style: {\r\n        width: 300,\r\n      },\r\n    };\r\n    return <Card className=\"gx-card\" title=\"Checkable\"><TreeSelect\r\n      className=\"gx-w-100\" {...tProps} /></Card>;\r\n  }\r\n}\r\n\r\nexport default Checkable;\r\n","import React, {Component} from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport MultipleSelection from \"./MultipleSelection\";\r\nimport GenerateTreeData from \"./GenerateTreeData\";\r\nimport Checkable from \"./Checkable\";\r\n\r\n\r\nclass TreeSelect extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Basic/>\r\n          <MultipleSelection/>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <GenerateTreeData/>\r\n          <Checkable/>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default TreeSelect;\r\n"],"sourceRoot":""}