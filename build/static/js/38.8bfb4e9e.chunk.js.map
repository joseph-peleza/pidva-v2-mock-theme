{"version":3,"sources":["routes/components/dataEntry/Form/Basic.js","routes/components/dataEntry/Form/HorizontalLoginForm.js","routes/components/dataEntry/Form/Registration.js","routes/components/dataEntry/Form/AdvancedSearch.js","routes/components/dataEntry/Form/DynamicFormItem.js","routes/components/dataEntry/Form/TimeRelatedControls.js","routes/components/dataEntry/Form/CustomizedFormControls.js","routes/components/dataEntry/Form/StoreFormData.js","routes/components/dataEntry/Form/CustomizedValidation.js","routes/components/dataEntry/Form/CoordinatedControls.js","routes/components/dataEntry/Form/FormLayout.js","routes/components/dataEntry/Form/DynamicRules.js","routes/components/dataEntry/Form/OtherFormControls.js","routes/components/dataEntry/Form/index.js"],"names":["FormItem","Form","Item","Basic","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","this","fieldsError","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","userNameError","passwordError","className","title","layout","onSubmit","validateStatus","help","rules","required","message","prefix","type","style","color","placeholder","htmlType","disabled","Object","keys","some","field","Component","WrappedNormalLoginForm","create","HorizontalLoginForm","showAuthLoader","userSignIn","state","email","password","showMessage","loader","alertMessage","valuePropName","initialValue","CircularProgress","error","connect","auth","authUser","hideMessage","userFacebookSignIn","userGoogleSignIn","userGithubSignIn","userTwitterSignIn","Option","AutoCompleteOption","residences","value","label","children","Registration","confirmDirty","autoCompleteResult","validateFieldsAndScroll","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","handleWebsiteChange","map","domain","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","width","websiteOptions","website","id","validator","onBlur","whitespace","options","addonBefore","dataSource","onChange","extra","RegistrationForm","AdvancedSearch","expand","handleSearch","handleReset","resetFields","toggle","count","i","push","lg","md","display","getFields","marginLeft","onClick","WrappedAdvancedSearch","uuid","DynamicFormItem","remove","k","length","setFieldsValue","filter","key","add","nextKeys","concat","formItemLayoutWithOutLabel","formItems","index","validateTrigger","marginRight","WrappedDynamicFieldSet","MonthPicker","RangePicker","TimeRelatedControls","fieldsValue","rangeValue","rangeTimeValue","format","config","rangeConfig","showTime","TimeRelated","PriceInput","handleNumberChange","number","parseInt","isNaN","triggerChange","handleCurrencyChange","currency","changedValue","assign","nextProps","size","React","CustomizedFormControls","checkPrice","WrappedDemo","CustomizedForm","onFieldsChange","changedFields","mapPropsToFields","username","createFormField","onValuesChange","_","StoreFormData","fields","handleFormChange","JSON","stringify","CustomizedValidation","hasFeedback","defaultValue","textAlign","CoordinatedControls","handleSelectChange","note","WrappedApp","FormLayout","handleFormLayoutChange","formLayout","buttonItemLayout","Group","Button","formTailLayout","DynamicRules","checkNick","check","info","handleChange","checked","WrappedDynamicRule","RadioButton","RadioGroup","OtherFormControls","normFile","Array","isArray","fileList","mode","min","max","marks","getValueFromEvent","name","action","listType","Dragger"],"mappings":"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","file":"static/js/38.8bfb4e9e.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport { Button, Card, Input } from \"antd\";\r\nimport { Form, Icon } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nfunction hasErrors(fieldsError) {\r\n  return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass Basic extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // To disabled submit button at the beginning.\r\n    this.props.form.validateFields();\r\n  }\r\n\r\n  render() {\r\n\r\n    const {getFieldDecorator, getFieldsError, getFieldError, isFieldTouched} = this.props.form;\r\n\r\n    // Only show error after a field is touched.\r\n    const userNameError = isFieldTouched('userName') && getFieldError('userName');\r\n    const passwordError = isFieldTouched('password') && getFieldError('password');\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Basic\">\r\n        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            validateStatus={userNameError ? 'error' : ''}\r\n            help={userNameError || ''}>\r\n            {getFieldDecorator('userName', {\r\n              rules: [{required: true, message: 'Please input your username!'}],\r\n            })(\r\n              <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>} placeholder=\"Username\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            validateStatus={passwordError ? 'error' : ''}\r\n            help={passwordError || ''}\r\n          >\r\n            {getFieldDecorator('password', {\r\n              rules: [{required: true, message: 'Please input your Password!'}],\r\n            })(\r\n              <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\r\n                     placeholder=\"Password\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    disabled={hasErrors(getFieldsError())}\r\n            >\r\n              Log in\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(Basic);\r\n\r\n\r\nexport default WrappedNormalLoginForm;\r\n\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { Button, Card, Checkbox, Input, message } from \"antd\";\r\nimport { Form, Icon } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\n\r\nimport {\r\n  hideMessage,\r\n  showAuthLoader,\r\n  userFacebookSignIn,\r\n  userGithubSignIn,\r\n  userGoogleSignIn,\r\n  userSignIn,\r\n  userTwitterSignIn\r\n} from \"src/appRedux/actions/Auth\";\r\nimport \"./horizontalLoginForm.less\";\r\nimport CircularProgress from \"src/components/CircularProgress/index\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass HorizontalLoginForm extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log(\"values\", values);\r\n      if (!err) {\r\n        this.props.showAuthLoader();\r\n        this.props.userSignIn(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: 'demo@example.com',\r\n      password: 'demo#123'\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const {getFieldDecorator} = this.props.form;\r\n    const {showMessage, loader, alertMessage} = this.props;\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Horizontal Login Form\">\r\n        <Form onSubmit={this.handleSubmit} className=\"gx-login-form gx-form-row0\">\r\n          <FormItem>\r\n            {getFieldDecorator('email', {\r\n              rules: [{required: true, message: 'Please input your email!'}],\r\n            })(\r\n              <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>} placeholder=\"Email\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem>\r\n            {getFieldDecorator('password', {\r\n              rules: [{required: true, message: 'Please input your Password!'}],\r\n            })(\r\n              <Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>} type=\"password\"\r\n                     placeholder=\"Password\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem>\r\n            {getFieldDecorator('remember', {\r\n              valuePropName: 'checked',\r\n              initialValue: true,\r\n            })(\r\n              <Checkbox>Remember me</Checkbox>\r\n            )}\r\n            <span className=\"gx-link login-form-forgot\">Forgot password</span>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n              Log in\r\n            </Button>\r\n            Or <span className=\"gx-link\">register now!</span>\r\n          </FormItem>\r\n        </Form>\r\n\r\n        {loader &&\r\n        <div className=\"gx-loader-view\">\r\n          <CircularProgress/>\r\n        </div>\r\n        }\r\n        {showMessage &&\r\n        message.error(alertMessage)}\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(HorizontalLoginForm);\r\nconst mapStateToProps = ({auth}) => {\r\n  const {loader, alertMessage, showMessage, authUser} = auth;\r\n  return {loader, alertMessage, showMessage, authUser}\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  userSignIn,\r\n  hideMessage,\r\n  showAuthLoader,\r\n  userFacebookSignIn,\r\n  userGoogleSignIn,\r\n  userGithubSignIn,\r\n  userTwitterSignIn\r\n})(WrappedNormalLoginForm);\r\n","import React, {Component} from \"react\";\r\nimport {\r\n  AutoComplete,\r\n  Button,\r\n  Card,\r\n  Cascader,\r\n  Checkbox,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Select,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport { Form, Icon } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst residences = [{\r\n  value: 'zhejiang',\r\n  label: 'Zhejiang',\r\n  children: [{\r\n    value: 'hangzhou',\r\n    label: 'Hangzhou',\r\n    children: [{\r\n      value: 'xihu',\r\n      label: 'West Lake',\r\n    }],\r\n  }],\r\n}, {\r\n  value: 'jiangsu',\r\n  label: 'Jiangsu',\r\n  children: [{\r\n    value: 'nanjing',\r\n    label: 'Nanjing',\r\n    children: [{\r\n      value: 'zhonghuamen',\r\n      label: 'Zhong Hua Men',\r\n    }],\r\n  }],\r\n}];\r\n\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  handleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({confirmDirty: this.state.confirmDirty || !!value});\r\n  }\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], {force: true});\r\n    }\r\n    callback();\r\n  }\r\n  handleWebsiteChange = (value) => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({autoCompleteResult});\r\n  }\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    const {autoCompleteResult} = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 8},\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 16},\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n      initialValue: '86',\r\n    })(\r\n      <Select style={{width: 70}}>\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n      </Select>\r\n    );\r\n\r\n    const websiteOptions = autoCompleteResult.map(website => (\r\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n    ));\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Registration Form\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"E-mail\"\r\n          >\r\n            {getFieldDecorator('email', {\r\n              rules: [{\r\n                type: 'email', message: 'The input is not valid E-mail!',\r\n              }, {\r\n                required: true, message: 'Please input your E-mail!',\r\n              }],\r\n            })(\r\n              <Input id=\"email1\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Password\"\r\n          >\r\n            {getFieldDecorator('password', {\r\n              rules: [{\r\n                required: true, message: 'Please input your password!',\r\n              }, {\r\n                validator: this.validateToNextPassword,\r\n              }],\r\n            })(\r\n              <Input type=\"password\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Confirm Password\"\r\n          >\r\n            {getFieldDecorator('confirm', {\r\n              rules: [{\r\n                required: true, message: 'Please confirm your password!',\r\n              }, {\r\n                validator: this.compareToFirstPassword,\r\n              }],\r\n            })(\r\n              <Input type=\"password\" onBlur={this.handleConfirmBlur}/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label={(\r\n              <span>\r\n              Nickname&nbsp;\r\n                <Tooltip title=\"What do you want others to call you?\">\r\n                <Icon type=\"question-circle-o\"/>\r\n              </Tooltip>\r\n            </span>\r\n            )}\r\n          >\r\n            {getFieldDecorator('nickname', {\r\n              rules: [{required: true, message: 'Please input your nickname!', whitespace: true}],\r\n            })(\r\n              <Input/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Habitual Residence\"\r\n          >\r\n            {getFieldDecorator('residence', {\r\n              initialValue: ['zhejiang', 'hangzhou', 'xihu'],\r\n              rules: [{type: 'array', required: true, message: 'Please select your habitual residence!'}],\r\n            })(\r\n              <Cascader options={residences}/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Phone Number\"\r\n          >\r\n            {getFieldDecorator('phone', {\r\n              rules: [{required: true, message: 'Please input your phone number!'}],\r\n            })(\r\n              <Input addonBefore={prefixSelector} style={{width: '100%'}}/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Website\"\r\n          >\r\n            {getFieldDecorator('website', {\r\n              rules: [{required: true, message: 'Please input website!'}],\r\n            })(\r\n              <AutoComplete\r\n                dataSource={websiteOptions}\r\n                onChange={this.handleWebsiteChange}\r\n                placeholder=\"website\"\r\n              >\r\n                <Input/>\r\n              </AutoComplete>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Captcha\"\r\n            extra=\"We must make sure that your are a human.\"\r\n          >\r\n            <Row>\r\n              <Col span={24} sm={12}>\r\n                {getFieldDecorator('captcha', {\r\n                  rules: [{required: true, message: 'Please input the captcha you got!'}],\r\n                })(\r\n                  <Input/>\r\n                )}\r\n              </Col>\r\n              <Col span={24} sm={12}>\r\n                <Button>Get captcha</Button>\r\n              </Col>\r\n            </Row>\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n            {getFieldDecorator('agreement', {\r\n              valuePropName: 'checked',\r\n            })(\r\n              <Checkbox>I have read the <span className=\"gx-link\">agreement</span></Checkbox>\r\n            )}\r\n          </FormItem>\r\n          <FormItem {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">Register</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst RegistrationForm = Form.create()(Registration);\r\nexport default RegistrationForm;\r\n","import React, {Component} from \"react\";\r\nimport { Button, Card, Col, Input, Row } from \"antd\";\r\nimport { Form, Icon } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\n\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass AdvancedSearch extends Component {\r\n\r\n  state = {\r\n    expand: false,\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log('Received values of form: ', values);\r\n    });\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n  };\r\n\r\n  toggle = () => {\r\n    const {expand} = this.state;\r\n    this.setState({expand: !expand});\r\n  };\r\n\r\n  // To generate mock Form.Item\r\n  getFields() {\r\n    const count = this.state.expand ? 10 : 6;\r\n    const {getFieldDecorator} = this.props.form;\r\n    const children = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      children.push(\r\n        <Col lg={8} md={8} sm={12} xs={24} key={i} style={{display: i < count ? 'block' : 'none'}}>\r\n          <div className=\"gx-form-row0\">\r\n            <FormItem label={`Field ${i}`}>\r\n              {getFieldDecorator(`field-${i}`)(\r\n                <Input placeholder=\"placeholder\"/>\r\n              )}\r\n            </FormItem>\r\n          </div>\r\n        </Col>\r\n      );\r\n    }\r\n    return children;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Advanced Search\">\r\n        <Form\r\n          className=\"ant-advanced-search-form\"\r\n          onSubmit={this.handleSearch}\r\n        >\r\n          <Row>\r\n            {this.getFields()}\r\n            <Col span={24} className=\"gx-text-right\">\r\n              <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n              <Button style={{marginLeft: 8}} onClick={this.handleReset}>\r\n                Clear\r\n              </Button>\r\n              <span className=\"gx-link gx-btn-link gx-ml-2\" onClick={this.toggle}>\r\n                Collapse <Icon type={this.state.expand ? 'up' : 'down'}/>\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst WrappedAdvancedSearch = Form.create()(AdvancedSearch);\r\n\r\n\r\nexport default (WrappedAdvancedSearch);\r\n","import React, {Component} from \"react\";\r\nimport { Button, Card, Input } from \"antd\";\r\nimport { Form, Icon } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\n\r\nimport \"./dynamicFormItem.less\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nlet uuid = 0;\r\n\r\nclass DynamicFormItem extends Component {\r\n\r\n\r\n  remove = (k) => {\r\n    const {form} = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue('keys');\r\n    // We need at least one passenger\r\n    if (keys.length === 1) {\r\n      return;\r\n    }\r\n\r\n    // can use data-binding to set\r\n    form.setFieldsValue({\r\n      keys: keys.filter(key => key !== k),\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const {form} = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue('keys');\r\n    const nextKeys = keys.concat(uuid);\r\n    uuid++;\r\n    // can use data-binding to set\r\n    // important! notify form to detect changes\r\n    form.setFieldsValue({\r\n      keys: nextKeys,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const {getFieldDecorator, getFieldValue} = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 4},\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 20},\r\n      },\r\n    };\r\n    const formItemLayoutWithOutLabel = {\r\n      wrapperCol: {\r\n        xs: {span: 24, offset: 0},\r\n        sm: {span: 20, offset: 4},\r\n      },\r\n    };\r\n    getFieldDecorator('keys', {initialValue: []});\r\n    const keys = getFieldValue('keys');\r\n    const formItems = keys.map((k, index) => {\r\n      return (\r\n        <FormItem\r\n          {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n          label={index === 0 ? 'Passengers' : ''}\r\n          required={false}\r\n          key={k}\r\n        >\r\n          {getFieldDecorator(`names[${k}]`, {\r\n            validateTrigger: ['onChange', 'onBlur'],\r\n            rules: [{\r\n              required: true,\r\n              whitespace: true,\r\n              message: \"Please input passenger's name or delete this field.\",\r\n            }],\r\n          })(\r\n            <Input placeholder=\"passenger name\" style={{width: '60%', marginRight: 8}}/>\r\n          )}\r\n          {keys.length > 1 ? (\r\n            <Icon\r\n              className=\"dynamic-delete-button\"\r\n              type=\"minus-circle-o\"\r\n              disabled={keys.length === 1}\r\n              onClick={() => this.remove(k)}\r\n            />\r\n          ) : null}\r\n        </FormItem>\r\n      );\r\n    });\r\n\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Dynamic Form Item\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          {formItems}\r\n          <FormItem {...formItemLayoutWithOutLabel}>\r\n            <Button type=\"dashed\" onClick={this.add} style={{width: '60%'}}>\r\n              <Icon type=\"plus\"/> Add field\r\n            </Button>\r\n          </FormItem>\r\n          <FormItem {...formItemLayoutWithOutLabel}>\r\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst WrappedDynamicFieldSet = Form.create()(DynamicFormItem);\r\n\r\n\r\nexport default WrappedDynamicFieldSet;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Button, Card, DatePicker, TimePicker } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst MonthPicker = DatePicker.MonthPicker;\r\nconst RangePicker = DatePicker.RangePicker;\r\n\r\n\r\nclass TimeRelatedControls extends Component {\r\n\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, fieldsValue) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n\r\n      // Should format date value before submit.\r\n      const rangeValue = fieldsValue['range-picker'];\r\n      const rangeTimeValue = fieldsValue['range-time-picker'];\r\n      const values = {\r\n        ...fieldsValue,\r\n        'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\r\n        'date-time-picker': fieldsValue['date-time-picker'].format('YYYY-MM-DD HH:mm:ss'),\r\n        'month-picker': fieldsValue['month-picker'].format('YYYY-MM'),\r\n        'range-picker': [rangeValue[0].format('YYYY-MM-DD'), rangeValue[1].format('YYYY-MM-DD')],\r\n        'range-time-picker': [\r\n          rangeTimeValue[0].format('YYYY-MM-DD HH:mm:ss'),\r\n          rangeTimeValue[1].format('YYYY-MM-DD HH:mm:ss'),\r\n        ],\r\n        'time-picker': fieldsValue['time-picker'].format('HH:mm:ss'),\r\n      };\r\n      console.log('Received values of form: ', values);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 8},\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 16},\r\n      },\r\n    };\r\n    const config = {\r\n      rules: [{type: 'object', required: true, message: 'Please select time!'}],\r\n    };\r\n    const rangeConfig = {\r\n      rules: [{type: 'array', required: true, message: 'Please select time!'}],\r\n    };\r\n\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Time Related Controls\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"DatePicker\"\r\n          >\r\n            {getFieldDecorator('date-picker', config)(\r\n              <DatePicker className=\"gx-mb-3 gx-w-100\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"DatePicker[showTime]\"\r\n          >\r\n            {getFieldDecorator('date-time-picker', config)(\r\n              <DatePicker className=\"gx-mb-3 gx-w-100\" showTime format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"MonthPicker\"\r\n          >\r\n            {getFieldDecorator('month-picker', config)(\r\n              <MonthPicker className=\"gx-mb-3 gx-w-100\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"RangePicker\"\r\n          >\r\n            {getFieldDecorator('range-picker', rangeConfig)(\r\n              <RangePicker className=\"gx-mb-3 gx-w-100\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"RangePicker[showTime]\"\r\n          >\r\n            {getFieldDecorator('range-time-picker', rangeConfig)(\r\n              <RangePicker className=\"gx-mb-3 gx-w-100\" showTime format=\"YYYY-MM-DD HH:mm:ss\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"TimePicker\"\r\n          >\r\n            {getFieldDecorator('time-picker', config)(\r\n              <TimePicker className=\"gx-mb-3 gx-w-100\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            wrapperCol={{\r\n              xs: {span: 24, offset: 0},\r\n              sm: {span: 16, offset: 8},\r\n            }}\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst TimeRelated = Form.create()(TimeRelatedControls);\r\n\r\nexport default TimeRelated;\r\n","import React from \"react\";\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Button, Card, Input, Select } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass PriceInput extends React.Component {\r\n  handleNumberChange = (e) => {\r\n    const number = parseInt(e.target.value || 0, 10);\r\n    if (isNaN(number)) {\r\n      return;\r\n    }\r\n    if (!('value' in this.props)) {\r\n      this.setState({number});\r\n    }\r\n    this.triggerChange({number});\r\n  }\r\n  handleCurrencyChange = (currency) => {\r\n    if (!('value' in this.props)) {\r\n      this.setState({currency});\r\n    }\r\n    this.triggerChange({currency});\r\n  }\r\n  triggerChange = (changedValue) => {\r\n    // Should provide an event to pass value to Form.\r\n    const onChange = this.props.onChange;\r\n    if (onChange) {\r\n      onChange(Object.assign({}, this.state, changedValue));\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const value = props.value || {};\r\n    this.state = {\r\n      number: value.number || 0,\r\n      currency: value.currency || 'rmb',\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // Should be a controlled component.\r\n    if ('value' in nextProps) {\r\n      const value = nextProps.value;\r\n      this.setState(value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {size} = this.props;\r\n    const state = this.state;\r\n    return (\r\n      <span>\r\n        <Input\r\n          type=\"text\"\r\n          size={size}\r\n          value={state.number}\r\n          onChange={this.handleNumberChange}\r\n          style={{width: '63%', marginRight: '5%'}}\r\n        />\r\n        <Select\r\n          value={state.currency}\r\n          size={size}\r\n          style={{width: '32%'}}\r\n          onChange={this.handleCurrencyChange}\r\n        >\r\n          <Option value=\"rmb\">RMB</Option>\r\n          <Option value=\"dollar\">Dollar</Option>\r\n        </Select>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nclass CustomizedFormControls extends React.Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  checkPrice = (rule, value, callback) => {\r\n    if (value.number > 0) {\r\n      callback();\r\n      return;\r\n    }\r\n    callback('Price must greater than zero!');\r\n  }\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Customized Form Controls\">\r\n        <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n          <FormItem label=\"Price\">\r\n            {getFieldDecorator('price', {\r\n              initialValue: {number: 0, currency: 'rmb'},\r\n              rules: [{validator: this.checkPrice}],\r\n            })(<PriceInput/>)}\r\n          </FormItem>\r\n          <FormItem>\r\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst WrappedDemo = Form.create()(CustomizedFormControls);\r\n\r\n\r\nexport default (WrappedDemo);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Card, Input } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\nconst CustomizedForm = Form.create({\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      username: Form.createFormField({\r\n        ...props.username,\r\n        value: props.username.value,\r\n      }),\r\n    };\r\n  },\r\n  onValuesChange(_, values) {\r\n    console.log(values);\r\n  },\r\n})((props) => {\r\n  const {getFieldDecorator} = props.form;\r\n  return (\r\n    <Form layout=\"inline\">\r\n      <FormItem label=\"Username\">\r\n        {getFieldDecorator('username', {\r\n          rules: [{required: true, message: 'Username is required!'}],\r\n        })(<Input/>)}\r\n      </FormItem>\r\n    </Form>\r\n  );\r\n});\r\n\r\nclass StoreFormData extends Component {\r\n\r\n  state = {\r\n    fields: {\r\n      username: {\r\n        value: 'benjycui',\r\n      },\r\n    },\r\n  };\r\n  handleFormChange = (changedFields) => {\r\n    this.setState({\r\n      fields: {...this.state.fields, ...changedFields},\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const fields = this.state.fields;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Store Form Data\">\r\n        <CustomizedForm {...fields} onChange={this.handleFormChange}/>\r\n        <pre className=\"language-bash\">\r\n          {JSON.stringify(fields, null, 2)}\r\n        </pre>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default StoreFormData;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Card, Cascader, Col, DatePicker, Input, InputNumber, Select, TimePicker } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {span: 24},\r\n    sm: {span: 5},\r\n  },\r\n  wrapperCol: {\r\n    xs: {span: 24},\r\n    sm: {span: 18},\r\n    md: {span: 16},\r\n    lg: {span: 12},\r\n  },\r\n};\r\n\r\n\r\nconst CustomizedValidation = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title=\"Customized Validation\">\r\n      <Form>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Fail\"\r\n          validateStatus=\"error\"\r\n          help=\"Should be combination of numbers & alphabets\"\r\n        >\r\n          <Input placeholder=\"unavailable choice\" id=\"error\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Warning\"\r\n          validateStatus=\"warning\"\r\n        >\r\n          <Input placeholder=\"Warning\" id=\"warning-1\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Validating\"\r\n          hasFeedback\r\n          validateStatus=\"validating\"\r\n          help=\"The information is being validated...\"\r\n        >\r\n          <Input placeholder=\"I'm the content is being validated\" id=\"validating\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Success\"\r\n          hasFeedback\r\n          validateStatus=\"success\"\r\n        >\r\n          <Input placeholder=\"I'm the content\" id=\"success\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Warning\"\r\n          hasFeedback\r\n          validateStatus=\"warning\"\r\n        >\r\n          <Input placeholder=\"Warning\" id=\"warning\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Fail\"\r\n          hasFeedback\r\n          validateStatus=\"error\"\r\n          help=\"Should be combination of numbers & alphabets\"\r\n        >\r\n          <Input placeholder=\"unavailable choice\" id=\"error-1\"/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Success\"\r\n          hasFeedback\r\n          validateStatus=\"success\"\r\n        >\r\n          <DatePicker style={{width: '100%'}}/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Warning\"\r\n          hasFeedback\r\n          validateStatus=\"warning\"\r\n        >\r\n          <TimePicker style={{width: '100%'}}/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Error\"\r\n          hasFeedback\r\n          validateStatus=\"error\"\r\n        >\r\n          <Select defaultValue=\"1\">\r\n            <Option value=\"1\">Option 1</Option>\r\n            <Option value=\"2\">Option 2</Option>\r\n            <Option value=\"3\">Option 3</Option>\r\n          </Select>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Validating\"\r\n          hasFeedback\r\n          validateStatus=\"validating\"\r\n          help=\"The information is being validated...\"\r\n        >\r\n          <Cascader defaultValue={['1']} options={[]}/>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          label=\"inline\"\r\n          {...formItemLayout}\r\n        >\r\n\r\n          <div className=\"ant-row gx-form-row0\">\r\n            <Col xs={24} sm={11}>\r\n              <FormItem validateStatus=\"error\" help=\"Please select the correct date\">\r\n                <DatePicker/>\r\n              </FormItem>\r\n            </Col>\r\n            <Col xs={24} sm={2}>\r\n          <span style={{display: 'inline-block', width: '100%', textAlign: 'center'}}>\r\n            -\r\n          </span>\r\n            </Col>\r\n            <Col xs={24} sm={11}>\r\n              <FormItem>\r\n                <DatePicker/>\r\n              </FormItem>\r\n            </Col>\r\n          </div>\r\n        </FormItem>\r\n\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Success\"\r\n          hasFeedback\r\n          validateStatus=\"success\"\r\n        >\r\n          <InputNumber style={{width: '100%'}}/>\r\n        </FormItem>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CustomizedValidation;\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Button, Card, Input, Select } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass CoordinatedControls extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  handleSelectChange = (value) => {\r\n    console.log(value);\r\n    this.props.form.setFieldsValue({\r\n      note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Coordinated Controls\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            label=\"Note\"\r\n            labelCol={{xs: 24, sm: 5}}\r\n            wrapperCol={{xs: 24, sm: 12}}\r\n          >\r\n            {getFieldDecorator('note', {\r\n              rules: [{required: true, message: 'Please input your note!'}],\r\n            })(\r\n              <Input/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            label=\"Gender\"\r\n            labelCol={{xs: 24, sm: 5}}\r\n            wrapperCol={{xs: 24, sm: 12}}\r\n          >\r\n            {getFieldDecorator('gender', {\r\n              rules: [{required: true, message: 'Please select your gender!'}],\r\n            })(\r\n              <Select\r\n                placeholder=\"Select a option and change input text above\"\r\n                onChange={this.handleSelectChange}\r\n              >\r\n                <Option value=\"male\">male</Option>\r\n                <Option value=\"female\">female</Option>\r\n              </Select>\r\n            )}\r\n          </FormItem>\r\n          <FormItem\r\n            wrapperCol={{xs: 24, sm: {span: 12, offset: 5}}}\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst WrappedApp = Form.create()(CoordinatedControls);\r\n\r\n\r\nexport default (WrappedApp);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Button, Card, Input, Radio } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass FormLayout extends Component {\r\n\r\n  handleFormLayoutChange = (e) => {\r\n    this.setState({formLayout: e.target.value});\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {formLayout} = this.state;\r\n    const formItemLayout = formLayout === 'horizontal' ? {\r\n      labelCol: {xs: 24, sm: 6},\r\n      wrapperCol: {xs: 24, sm: 14},\r\n    } : null;\r\n    const buttonItemLayout = formLayout === 'horizontal' ? {\r\n      wrapperCol: {xs: 24, sm: {span: 14, offset: 6}},\r\n    } : null;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Form Layout\">\r\n        <Form layout={formLayout}>\r\n          <FormItem\r\n            label=\"Form Layout\"\r\n            {...formItemLayout}\r\n          >\r\n            <Radio.Group defaultValue=\"horizontal\" onChange={this.handleFormLayoutChange}>\r\n              <Radio.Button value=\"horizontal\">Horizontal</Radio.Button>\r\n              <Radio.Button value=\"vertical\">Vertical</Radio.Button>\r\n              <Radio.Button value=\"inline\">Inline</Radio.Button>\r\n            </Radio.Group>\r\n          </FormItem>\r\n          <FormItem\r\n            label=\"Field A\"\r\n            {...formItemLayout}\r\n          >\r\n            <Input placeholder=\"input placeholder\"/>\r\n          </FormItem>\r\n          <FormItem\r\n            label=\"Field B\"\r\n            {...formItemLayout}\r\n          >\r\n            <Input placeholder=\"input placeholder\"/>\r\n          </FormItem>\r\n          <FormItem {...buttonItemLayout}>\r\n            <Button type=\"primary\">Submit</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default FormLayout;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Button, Card, Checkbox, Input } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {xs: 24, sm: 6},\r\n  wrapperCol: {xs: 24, sm: 14},\r\n};\r\nconst formTailLayout = {\r\n  labelCol: {xs: 24, sm: 6},\r\n  wrapperCol: {xs: 24, sm: {span: 14, offset: 6}},\r\n};\r\n\r\nclass DynamicRules extends Component {\r\n  state = {\r\n    checkNick: false,\r\n  };\r\n  check = () => {\r\n    this.props.form.validateFields(\r\n      (err) => {\r\n        if (!err) {\r\n          console.info('success');\r\n        }\r\n      },\r\n    );\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      checkNick: e.target.checked,\r\n    }, () => {\r\n      this.props.form.validateFields(['nickname'], {force: true});\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Dynamic Rules\">\r\n        <Form>\r\n          <FormItem {...formItemLayout} label=\"Name\">\r\n            {getFieldDecorator('username', {\r\n              rules: [{\r\n                required: true,\r\n                message: 'Please input your name',\r\n              }],\r\n            })(\r\n              <Input placeholder=\"Please input your name\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem {...formItemLayout} label=\"Nickname\">\r\n            {getFieldDecorator('nickname-1', {\r\n              rules: [{\r\n                required: this.state.checkNick,\r\n                message: 'Please input your nickname',\r\n              }],\r\n            })(\r\n              <Input placeholder=\"Please input your nickname\"/>\r\n            )}\r\n          </FormItem>\r\n          <FormItem {...formTailLayout}>\r\n            <Checkbox\r\n              value={this.state.checkNick}\r\n              onChange={this.handleChange}\r\n            >\r\n              Nickname is required\r\n            </Checkbox>\r\n          </FormItem>\r\n          <FormItem {...formTailLayout}>\r\n            <Button type=\"primary\" onClick={this.check}>\r\n              Check\r\n            </Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedDynamicRule = Form.create()(DynamicRules);\r\n\r\nexport default (WrappedDynamicRule);\r\n\r\n","import React, {Component} from \"react\";\r\nimport { Button, Card, InputNumber, Radio, Rate, Select, Slider, Switch, Upload } from \"antd\";\r\nimport { Form, Icon } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\n\r\nimport \"./otherFormControls.less\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst RadioButton = Radio.Button;\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass OtherFormControls extends Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n  normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {xs: 24, sm: 6},\r\n      wrapperCol: {xs: 24, sm: 14},\r\n    };\r\n    return (\r\n      <Card className=\"gx-card\" title=\"Other Form Controls\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Plain Text\"\r\n          >\r\n            <span className=\"ant-form-text\">China</span>\r\n          </FormItem>\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Select\"\r\n            hasFeedback\r\n          >\r\n            {getFieldDecorator('select', {\r\n              rules: [\r\n                {required: true, message: 'Please select your country!'},\r\n              ],\r\n            })(\r\n              <Select placeholder=\"Please select a country\">\r\n                <Option value=\"china\">China</Option>\r\n                <Option value=\"use\">U.S.A</Option>\r\n              </Select>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Select[multiple]\"\r\n          >\r\n            {getFieldDecorator('select-multiple', {\r\n              rules: [\r\n                {required: true, message: 'Please select your favourite colors!', type: 'array'},\r\n              ],\r\n            })(\r\n              <Select mode=\"multiple\" placeholder=\"Please select favourite colors\">\r\n                <Option value=\"red\">Red</Option>\r\n                <Option value=\"green\">Green</Option>\r\n                <Option value=\"blue\">Blue</Option>\r\n              </Select>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"InputNumber\"\r\n          >\r\n            {getFieldDecorator('input-number', {initialValue: 3})(\r\n              <InputNumber min={1} max={10}/>\r\n            )}\r\n            <span className=\"ant-form-text\"> machines</span>\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Switch\"\r\n          >\r\n            {getFieldDecorator('switch', {valuePropName: 'checked'})(\r\n              <Switch/>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Slider\"\r\n          >\r\n            {getFieldDecorator('slider')(\r\n              <Slider marks={{0: 'A', 20: 'B', 40: 'C', 60: 'D', 80: 'E', 100: 'F'}}/>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Radio.Group\"\r\n          >\r\n            {getFieldDecorator('radio-group')(\r\n              <RadioGroup>\r\n                <Radio value=\"a\">item 1</Radio>\r\n                <Radio value=\"b\">item 2</Radio>\r\n                <Radio value=\"c\">item 3</Radio>\r\n              </RadioGroup>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Radio.Button\"\r\n          >\r\n            {getFieldDecorator('radio-button')(\r\n              <RadioGroup>\r\n                <RadioButton value=\"a\">item 1</RadioButton>\r\n                <RadioButton value=\"b\">item 2</RadioButton>\r\n                <RadioButton value=\"c\">item 3</RadioButton>\r\n              </RadioGroup>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Rate\"\r\n          >\r\n            {getFieldDecorator('rate', {\r\n              initialValue: 3.5,\r\n            })(\r\n              <Rate/>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Upload\"\r\n            extra=\"longgggggggggggggggggggggggggggggggggg\"\r\n          >\r\n            {getFieldDecorator('upload', {\r\n              valuePropName: 'fileList',\r\n              getValueFromEvent: this.normFile,\r\n            })(\r\n              <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n                <Button>\r\n                  <Icon type=\"upload\"/> Click to upload\r\n                </Button>\r\n              </Upload>\r\n            )}\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            {...formItemLayout}\r\n            label=\"Dragger\"\r\n          >\r\n            <div className=\"dropbox\">\r\n              {getFieldDecorator('dragger', {\r\n                valuePropName: 'fileList',\r\n                getValueFromEvent: this.normFile,\r\n              })(\r\n                <Upload.Dragger name=\"files\" action=\"/upload.do\">\r\n                  <p className=\"ant-upload-drag-icon\">\r\n                    <Icon type=\"inbox\"/>\r\n                  </p>\r\n                  <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                  <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\r\n                </Upload.Dragger>\r\n              )}\r\n            </div>\r\n          </FormItem>\r\n\r\n          <FormItem\r\n            wrapperCol={{xs: 24, sm: {span: 14, offset: 6}}}>\r\n            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n          </FormItem>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedDemo = Form.create()(OtherFormControls);\r\n\r\n\r\nexport default WrappedDemo;\r\n","import React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Basic from \"./Basic\";\r\nimport HorizontalLoginForm from \"./HorizontalLoginForm\";\r\nimport Registration from \"./Registration\";\r\nimport AdvancedSearch from \"./AdvancedSearch\";\r\nimport DynamicFormItem from \"./DynamicFormItem\";\r\nimport TimeRelatedControls from \"./TimeRelatedControls\";\r\nimport CustomizedFormControls from \"./CustomizedFormControls\";\r\nimport StoreFormData from \"./StoreFormData\";\r\nimport CustomizedValidation from \"./CustomizedValidation\";\r\nimport CoordinatedControls from \"./CoordinatedControls\";\r\nimport FormLayout from \"./FormLayout\";\r\nimport DynamicRules from \"./DynamicRules\";\r\nimport OtherFormControls from \"./OtherFormControls\";\r\n\r\nconst Form = () => {\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <Basic/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <HorizontalLoginForm/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <Registration/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <AdvancedSearch/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <DynamicFormItem/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <TimeRelatedControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CustomizedFormControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <StoreFormData/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CustomizedValidation/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <CoordinatedControls/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <FormLayout/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <DynamicRules/>\r\n      </Col>\r\n      <Col span={24}>\r\n        <OtherFormControls/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default (Form);\r\n"],"sourceRoot":""}